[
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/app.js",
    "memberof": null,
    "longname": "js/app.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import Core from './core';\n//import Router from './router';\nimport ServiceLocator from './service-locator';\nlet _instance = null;\n/**\n * The App class is used to manage the state of an application.\n * @example\n *\tvar app = new px.mobile.App('myApp', {\n *\tdebug: true,\n *\tviewContainer: document.getElementById('appViews'),\n *\tnavbar: document.getElementById('navbar'),\n *\tel: '#emApp',\n *\tsession: {\n *\t\tuser: null\n *\t}\n * });\n * var pubsub = new px.mobile.PubSub('emPubSub');\n * var db = new px.mobile.DB('emDB', {\n *    baseUrl: 'http://pmapi/cdb/predixgo'\n * });\n * var http = new px.mobile.HTTP('emHTTP', {\n *   baseUrl: '/'\n * });\n * app.services.register('db', db);\n * app.services.register('http', http);\n * app.services.register('pubsub', pubsub);\n */\nexport default class App extends Core {\n  /**\n   * Return the ServiceLocator _instance.\n   * @return the _instance.\n   */\n  static getInstance() {\n    if (_instance === null) {\n      _instance = new App();\n    }\n    return _instance;\n  }\n\n  constructor(name, options) {\n    super(name, options);\n    this.modules = {};\n    this.session = {};\n    //  this.router = new Router();\n    this.services = new ServiceLocator();\n\n    // Default Parameters\n    this.params = {\n\n      cache: true,\n      cacheIgnore: [],\n      cacheIgnoreGetParameters: false,\n      cacheDuration: 1000 * 60 * 10, // Ten minutes\n      preloadPreviousPage: true,\n      uniqueHistory: false,\n      uniqueHistoryIgnoreGetParameters: false,\n      dynamicPageUrl: 'content-{{index}}',\n      allowDuplicateUrls: false,\n      router: true,\n\n      // Push State\n      pushState: false,\n      pushStateRoot: undefined,\n      pushStateNoAnimation: false,\n      pushStateSeparator: '#!/',\n      pushStatePreventOnLoad: true,\n\n      // Fast clicks\n      fastClicks: true,\n      fastClicksDistanceThreshold: 10,\n      fastClicksDelayBetweenClicks: 50,\n\n      // Tap Hold\n      tapHold: false,\n      tapHoldDelay: 750,\n      tapHoldPreventClicks: true,\n\n      // Active State\n      activeState: true,\n      activeStateElements: 'a, button, label, span',\n\n      // Animate Nav Back Icon\n      animateNavBackIcon: false,\n\n      // Swipe Back\n      swipeBackPage: true,\n      swipeBackPageThreshold: 0,\n      swipeBackPageActiveArea: 30,\n      swipeBackPageAnimateShadow: true,\n      swipeBackPageAnimateOpacity: true,\n\n      // Ajax\n      ajaxLinks: undefined, // or CSS selector\n\n      // External Links\n      externalLinks: '.external', // CSS selector\n\n      // Sortable\n      sortable: true,\n\n      // Scroll toolbars\n      hideNavbarOnPageScroll: false,\n      hideToolbarOnPageScroll: false,\n      hideTabbarOnPageScroll: false,\n      showBarsOnPageScrollEnd: true,\n      showBarsOnPageScrollTop: true,\n\n      // Tap Navbar or Statusbar to scroll to top\n      scrollTopOnNavbarClick: false,\n      scrollTopOnStatusbarClick: false,\n\n      // Modals\n      modalButtonOk: 'OK',\n      modalButtonCancel: 'Cancel',\n      modalUsernamePlaceholder: 'Username',\n      modalPasswordPlaceholder: 'Password',\n      modalTitle: 'App',\n      modalCloseByOutside: false,\n      actionsCloseByOutside: true,\n      popupCloseByOutside: true,\n      modalPreloaderTitle: 'Loading... ',\n      modalStack: true,\n\n      // Lazy Load\n      imagesLazyLoadThreshold: 0,\n      imagesLazyLoadSequential: true,\n\n      // Name space\n      viewClass: 'view',\n      viewMainClass: 'view-main',\n      viewsClass: 'views',\n\n      // Notifications defaults\n      notificationCloseOnClick: false,\n      notificationCloseIcon: true,\n      notificationCloseButtonText: 'Close',\n\n      // Animate Pages\n      animatePages: true,\n\n      // Templates\n      templates: {},\n      templateData: {},\n      templatePages: false,\n      precompileTemplates: false,\n\n      // Auto init\n      init: true\n    };\n\n    // Extend defaults with parameters\n    for (var param in options) {\n      this.params[param] = options[param];\n    }\n\n    console.warn('App.constructor', this);\n\n  }\n\n  /**\n   * Handle starting all registered services.\n   */\n  start() {\n    this.log.logApi('start', this);\n    return Promise.all(this.services.startAll());\n  }\n\n  /**\n   * Handle bootstrapping application.\n   * @param {Function} cb - The callback function to execute when done.\n   */\n  bootstrap(cb) {\n    this.log.logApi('bootstrap', this);\n    cb(this);\n  }\n\n  /**\n   * Handle running the application.\n   * @param {Function} cb - The callback function to execute when done.\n   */\n  run(cb) {\n    this.log.logApi('run', this);\n    this.start();\n    cb(this);\n  }\n\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_instance",
    "memberof": "js/app.js",
    "longname": "js/app.js~_instance",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/app.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "App",
    "memberof": "js/app.js",
    "longname": "js/app.js~App",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/app.js",
    "importStyle": "App",
    "description": "The App class is used to manage the state of an application.",
    "examples": [
      "\tvar app = new px.mobile.App('myApp', {\n\tdebug: true,\n\tviewContainer: document.getElementById('appViews'),\n\tnavbar: document.getElementById('navbar'),\n\tel: '#emApp',\n\tsession: {\n\t\tuser: null\n\t}\n});\nvar pubsub = new px.mobile.PubSub('emPubSub');\nvar db = new px.mobile.DB('emDB', {\n   baseUrl: 'http://pmapi/cdb/predixgo'\n});\nvar http = new px.mobile.HTTP('emHTTP', {\n  baseUrl: '/'\n});\napp.services.register('db', db);\napp.services.register('http', http);\napp.services.register('pubsub', pubsub);"
    ],
    "lineNumber": 28,
    "interface": false,
    "extends": [
      "js/core~Core"
    ]
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getInstance",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App.getInstance",
    "access": null,
    "description": "Return the ServiceLocator _instance.",
    "lineNumber": 33,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "the _instance."
    },
    "generator": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#constructor",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "modules",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#modules",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "session",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#session",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "services",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#services",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "params",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#params",
    "access": null,
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#start",
    "access": null,
    "description": "Handle starting all registered services.",
    "lineNumber": 163,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "bootstrap",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#bootstrap",
    "access": null,
    "description": "Handle bootstrapping application.",
    "lineNumber": 172,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "The callback function to execute when done."
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "run",
    "memberof": "js/app.js~App",
    "longname": "js/app.js~App#run",
    "access": null,
    "description": "Handle running the application.",
    "lineNumber": 181,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "cb",
        "description": "The callback function to execute when done."
      }
    ],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/base.js",
    "memberof": null,
    "longname": "js/base.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nimport * as utils from './utils';\nimport Logger from './log';\nimport PubSub from './pubsub';\nimport dom from './dom';\n\n/**\n * BaseClass provides a Base for all custom classes.\n * @example\n * class MyClass extends BaseClass{\n *  constructor(name, options) {\n *    super(name, options);\n *  }\n * }\n */\nexport default class BaseClass {\n  /**\n   * @description The constructor method that returns an instance of this class.\n   * @constructor\n   * @param {String} name  - The name of the instance.\n   * @param {Object} options - The options for the instance.\n   * @return {BaseClass}\n   */\n  constructor(name, options) {\n    this.utils = utils;\n    this._id = name || utils.uuid();\n    this.log = new Logger(name, {\n      colors: {\n        debug: 'color:blue'\n      }\n    });\n\n    this.mixin(new PubSub(name, options));\n    this.mixin(options);\n    return this;\n  }\n\n  mixin(klass) {\n    this.utils.addMixin(klass, this);\n  }\n\n  static extend(obj) {\n    console.warn('Extend', obj, this);\n    return dom.extend(this, obj);\n  }\n\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "BaseClass",
    "memberof": "js/base.js",
    "longname": "js/base.js~BaseClass",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/base.js",
    "importStyle": "BaseClass",
    "description": "BaseClass provides a Base for all custom classes.",
    "examples": [
      "class MyClass extends BaseClass{\n constructor(name, options) {\n   super(name, options);\n }\n}"
    ],
    "lineNumber": 16,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/base.js~BaseClass",
    "longname": "js/base.js~BaseClass#constructor",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "The constructor method that returns an instance of this class."
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the instance."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options for the instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BaseClass"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "utils",
    "memberof": "js/base.js~BaseClass",
    "longname": "js/base.js~BaseClass#utils",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "_id",
    "memberof": "js/base.js~BaseClass",
    "longname": "js/base.js~BaseClass#_id",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "log",
    "memberof": "js/base.js~BaseClass",
    "longname": "js/base.js~BaseClass#log",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "mixin",
    "memberof": "js/base.js~BaseClass",
    "longname": "js/base.js~BaseClass#mixin",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "klass",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "extend",
    "memberof": "js/base.js~BaseClass",
    "longname": "js/base.js~BaseClass.extend",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/collection.js",
    "memberof": null,
    "longname": "js/collection.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport BaseClass from './base';\nimport Model from './model';\nimport HTTP from './http';\nimport * as utils from './utils';\n\nlet defaults = {\n  baseUrl: '/default',\n  idField: '_id',\n  model: {},\n  models: [],\n  params: {\n    limit: 25,\n    startkey: null,\n    endkey: null\n  }\n};\n\nexport default class Collection extends BaseClass {\n\n  static extend(obj) {\n    console.warn('Extend', obj, this);\n    return utils.addMixin(obj, this);\n  }\n  constructor(name, options = defaults) {\n    super(name, options);\n\n    // TODO: Setup defaults\n    this.model = options.model;\n    this.models = options.models;\n    this.baseUrl = options.baseUrl;\n\n    this.idField = options.idField || '_id';\n    this.params = options.params || {\n      startkey: '',\n      endkey: '',\n      limit: 25\n    };\n    this.lastResponse = null;\n\n    // TODO: Adpater can be http or db\n    this.adapter = options.adapter || HTTP;\n    this.adapter = new this.adapter(name, options);\n\n    return this;\n  }\n\n  //Handle parsing the response from a fetch\n  parse(resp) {\n    return resp;\n  }\n\n  //Add a model to the list of items.\n  add(models) {\n    return this.models.push(models);\n  }\n\n  //Handle sending another request.\n  fetch(params) {\n    var self = this;\n    return self.adapter.get(params).then(function(resp) {\n      self.lastResponse = resp;\n      self.models = resp.data.rows;\n      return resp;\n    });\n  }\n\n  // TODO: remove(model) - Remove a model from the list of items.\n  remove(model) {\n    console.warn('Find model by', model);\n    if (this.utils.type(model) === 'string') {\n      console.warn('Find by _id', model);\n    }\n    if (this.utils.type(model) === 'number') {\n      console.warn('Find by index', model);\n    }\n    if (this.utils.type(model) === 'object') {\n      console.warn('Find by model', model);\n    }\n  }\n\n  // TODO: where(filter) - Filter models based on filter passed.\n  where(filter) {\n    return this.models.filter(filter);\n  }\n\n  // TODO: findWhere(filter) - Filter and return first model by filter.\n  find(filter) {\n    return this.models.filter(filter);\n  }\n\n  // TODO: Return a model by id\n  get(id) {\n\n  }\n\n  toJSON() {\n    return JSON.stringify(this.models);\n  }\n\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "defaults",
    "memberof": "js/collection.js",
    "longname": "js/collection.js~defaults",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/collection.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Collection",
    "memberof": "js/collection.js",
    "longname": "js/collection.js~Collection",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/collection.js",
    "importStyle": "Collection",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "extend",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection.extend",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#constructor",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "*"
        ],
        "defaultRaw": "defaults",
        "defaultValue": "defaults"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "model",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#model",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "models",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#models",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "baseUrl",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#baseUrl",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "idField",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#idField",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "params",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#params",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "lastResponse",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#lastResponse",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "adapter",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#adapter",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "adapter",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#adapter",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "parse",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#parse",
    "access": null,
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "resp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#add",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "models",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#fetch",
    "access": null,
    "description": null,
    "lineNumber": 60,
    "undocument": true,
    "params": [
      {
        "name": "params",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#remove",
    "access": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "params": [
      {
        "name": "model",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "where",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#where",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "filter",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "find",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#find",
    "access": null,
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "params": [
      {
        "name": "filter",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#get",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "js/collection.js~Collection",
    "longname": "js/collection.js~Collection#toJSON",
    "access": null,
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/component.js",
    "memberof": null,
    "longname": "js/component.js",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "content": "/*\ncreatedCallback – Called when a custom element is created.\nattachedCallback – Called when a custom element is inserted into the DOM.\ndetachedCallback – Called when a custom element is removed from the DOM.\nattributeChangedCallback(attrName, oldValue, newValue) – Called when an attribute on a custom element changes.\n\n\nvar XTreehouseProto = Object.create(HTMLElement.prototype);\n\nXTreehouseProto.createdCallback = function() {}\nXTreehouseProto.attachedCallback = function() {}\nXTreehouseProto.detachedCallback = function() {}\nXTreehouseProto.attributeChangedCallback = function(attrName, oldValue, newValue) {}\n\nvar XTreehouse = document.registerElement('x-treehouse', {\n  prototype: XTreehouseProto\n});\n*/\n"
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/core.js",
    "memberof": null,
    "longname": "js/core.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nvar extensions = {};\nimport BaseClass from './base';\n/**\n * The Core class.\n * @example\n Core.register('tweet', function(sandbox) {\n   return {\n     init: function() {\n       console.log('starting tweet module');\n     }\n   }\n });\n Core.start('tweet');\n * @class Core\n */\nexport default class Core extends BaseClass {\n  /**\n   * The constructor of Core\n   *\n   * @class Core\n   * @constructor\n   */\n  constructor(name, options) {\n    super(name, options);\n    this.modules = {};\n    return this;\n  }\n\n  /**\n   * Registers a new module\n   *\n   * @method register\n   * @param {string} module the name of the new module\n   * @param {function} constructor the constructor of the new module\n   */\n  register(module, constructor) {\n    if (this.modules[module]) {\n      this.helpers.err('!!module', module);\n      return false;\n    }\n    this.modules[module] = {\n      constructor: constructor,\n      instance: null\n    };\n  }\n\n  /**\n   * Check if the module is already initialized or not\n   *\n   * @method moduleCheck\n   * @param {string} module the name of the module that will be checked\n   * @param {boolean} destroy check if the module exists, but is already destroyed\n   * @return {boolean} if the module exists or already have an instance\n   */\n  moduleCheck(module, destroy) {\n    if (destroy) {\n      return !module || !module.instance;\n    }\n\n    return !module || module.instance;\n  }\n\n  /**\n   * Starts a registered module, if no module is passed, it starts all modules\n   *\n   * @method start\n   * @param {string} module the name of the module\n   */\n  start(module) {\n    if (!module) {\n      return this.startAll();\n    }\n\n    var cModule = this.modules[module],\n      el = this.getElement(module);\n\n    if (this.moduleCheck(cModule)) {\n      this.helpers.err('!start', module);\n      return false;\n    }\n\n    cModule.instance = new cModule.constructor(new this.Sandbox(module));\n\n    // attachs the element to the instance of the module\n    cModule.instance.el = el;\n\n    if (cModule.instance.init) {\n      return cModule.instance.init();\n    }\n  }\n\n\n  /**\n   * Stops a registered module\n   *\n   * @method start\n   * @param {string} module the name of the module\n   */\n  stop(module) {\n    if (!module) {\n      return this.stopAll();\n    }\n\n    var cModule = this.modules[module],\n      stopReturn;\n\n    if (this.moduleCheck(cModule, true)) {\n      this.helpers.err('!stop', module);\n      return false;\n    }\n\n    if (cModule.instance.destroy) {\n      stopReturn = cModule.instance.destroy();\n    }\n\n    cModule.instance = null;\n\n    this.Sandbox.clearNotifications(module);\n\n    return stopReturn;\n  }\n\n  /**\n   * Stop all started modules\n   *\n   * @method stopAll\n   */\n  stopAll() {\n    this.xAll('stop');\n  }\n\n  /**\n   * Stop all started modules\n   *\n   * @method stopAll\n   */\n  startAll() {\n    this.xAll('start');\n  }\n\n  /**\n   * Helper for startAll and stopAll\n   *\n   * @method xAll\n   * @param {string} method the method that will be triggered\n   */\n  xAll(method) {\n      for (var module in this.modules) {\n        if (this.modules.hasOwnProperty(module)) {\n          this[method](module);\n        }\n      }\n    }\n    /**\n     * Gets an element by ID to attach to the module instance\n     *\n     * @method getElement\n     * @param {string} id the id of the main element in the module\n     */\n  getElement(id) {\n    var el = document.getElementById(id);\n\n    // this fixes some blackberry, opera and IE possible bugs\n    return (el && el.id === id && el.parentElement) ? el : null;\n  }\n\n\n  /**\n   * Extends core functionalities\n   *\n   * @method extend\n   * @param {string} name the name of the extension\n   * @param {function | array | boolean | string | number} implementation what the extension does\n   */\n  static extend(name, implementation) {\n    extensions[name] = implementation;\n  }\n\n  /**\n   * returns the extension\n   *\n   * @method getExtension\n   * @param {string} extension the name of the extension\n   * @return {function | array | boolean | string | number} the implementation of the extension\n   */\n  static getExtension(extension) {\n    return extensions[extension] || null;\n  }\n}\n\n\n\n/**\n * helpers/err.js - Handles error messages\n *\n * @method err\n * @param {string} error the type of the error\n * @param {function} message the complementary message to the error\n */\nvar err = function(error, message) {\n  Core.helpers.log(`${err.messages[error]} - ${message}`);\n};\n\nerr.messages = {\n  '!start': 'Could not start the given module, it\\'s either already started or is not registered: ',\n  '!stop': 'Could not stop the given module, it\\'s either already stopped or is not registered: ',\n  '!!module': 'Can\\'t register an already registered module: ',\n  '!!listen': 'There\\'s already an listen handler to the notification: '\n};\n\nCore.helpers = Core.helpers || {};\nCore.helpers.err = err;\n\n\n/**\n * helpers/log.js - Adds console.log to Core helpers\n * @method log\n */\nCore.helpers = Core.helpers || {};\nCore.helpers.log = (window.console) ? window.console.log.bind(window.console) : function() {};\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "extensions",
    "memberof": "js/core.js",
    "longname": "js/core.js~extensions",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/core.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Core",
    "memberof": "js/core.js",
    "longname": "js/core.js~Core",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/core.js",
    "importStyle": "Core",
    "description": "The Core class.",
    "examples": [
      "Core.register('tweet', function(sandbox) {\n  return {\n    init: function() {\n      console.log('starting tweet module');\n    }\n  }\n});\nCore.start('tweet');"
    ],
    "lineNumber": 17,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Core"
      }
    ],
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#constructor",
    "access": null,
    "description": "The constructor of Core",
    "lineNumber": 24,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Core"
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "modules",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#modules",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "register",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#register",
    "access": null,
    "description": "Registers a new module",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "register"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "module",
        "description": "the name of the new module"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "constructor",
        "description": "the constructor of the new module"
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "moduleCheck",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#moduleCheck",
    "access": null,
    "description": "Check if the module is already initialized or not",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "moduleCheck"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "module",
        "description": "the name of the module that will be checked"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "destroy",
        "description": "check if the module exists, but is already destroyed"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "if the module exists or already have an instance"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#start",
    "access": null,
    "description": "Starts a registered module, if no module is passed, it starts all modules",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "start"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "module",
        "description": "the name of the module"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stop",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#stop",
    "access": null,
    "description": "Stops a registered module",
    "lineNumber": 100,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "start"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "module",
        "description": "the name of the module"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "stopAll",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#stopAll",
    "access": null,
    "description": "Stop all started modules",
    "lineNumber": 129,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "stopAll"
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startAll",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#startAll",
    "access": null,
    "description": "Stop all started modules",
    "lineNumber": 138,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "stopAll"
      }
    ],
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "xAll",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#xAll",
    "access": null,
    "description": "Helper for startAll and stopAll",
    "lineNumber": 148,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "xAll"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "the method that will be triggered"
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getElement",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core#getElement",
    "access": null,
    "description": "Gets an element by ID to attach to the module instance",
    "lineNumber": 161,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "getElement"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "the id of the main element in the module"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "extend",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core.extend",
    "access": null,
    "description": "Extends core functionalities",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "extend"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "the name of the extension"
      },
      {
        "nullable": null,
        "types": [
          "function ",
          " array ",
          " boolean ",
          " string ",
          " number"
        ],
        "spread": false,
        "optional": false,
        "name": "implementation",
        "description": "what the extension does"
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getExtension",
    "memberof": "js/core.js~Core",
    "longname": "js/core.js~Core.getExtension",
    "access": null,
    "description": "returns the extension",
    "lineNumber": 187,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "getExtension"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "extension",
        "description": "the name of the extension"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function ",
        " array ",
        " boolean ",
        " string ",
        " number"
      ],
      "spread": false,
      "description": "the implementation of the extension"
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "err",
    "memberof": "js/core.js",
    "longname": "js/core.js~err",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/core.js",
    "importStyle": null,
    "description": "helpers/err.js - Handles error messages",
    "lineNumber": 201,
    "unknown": [
      {
        "tagName": "@method",
        "tagValue": "err"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "the type of the error"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "the complementary message to the error"
      }
    ],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/db.js",
    "memberof": null,
    "longname": "js/db.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nimport BaseClass from './base';\nimport HTTP from './http';\nimport Logger from './log';\n\n/**\n * @description The DB class was created to help web developers build applications that work as well offline as they do online.\n * @example\n * var db = new px.mobile.DB('db1', {\n *    baseUrl: 'http://localhost:5984/default'\n * });\n * db.get('sync-user1').then(function(resp){\n *    console.log(json);\n * });\n * @extends {BaseClass}\n * @implements {MyInterface2}\n */\nexport default class DB extends BaseClass {\n\n  /**\n   * @description The constructor method that returns an instance of this DB class.\n   * @constructor\n   * @param {String} name  - The name of the instance\n   * @param {Object} options - The options object\n   * @return {DB} Instance of the DB class.\n   */\n  constructor(name = 'db', options = {\n    baseUrl: '/default'\n  }) {\n    super(name, options);\n\n    if (!options.baseUrl) {\n      //throw new Error('DB: Must provide a baseUrl');\n      console.warn('[DB] - Using default baseUrl - /default');\n    }\n\n    /**\n     * @type {Class} adapter - The adapter to use for all requests.\n     */\n    this.adapter = options.adapter || HTTP;\n    this.adapter = new this.adapter(name, options);\n\n    return this;\n  }\n\n  /**\n   * @description I fetch general information of the database.\n   * @example\n   * db.info().then(function(resp){\n   *    assert.equal(resp.status, 200);\n   *    assert.ok(resp.data);\n   *    assert.ok(resp.data.db_name);\n   *    assert.ok(resp.data.update_seq);\n   * }).catch(function (err) {\n   *    console.log(err);\n   * });\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  info() {\n    return this.adapter.get('');\n  }\n\n  /**\n   * @description Fetch multiple documents, indexed and sorted by the _id. Deleted documents are only included if options.keys is specified.\n   * @param {Object} options - The options object\n   * @param {Boolean} options.include_docs - Include the document itself in each row in the doc field. Otherwise by default you only get the _id and _rev properties.\n   * @param {Boolean} options.conflicts - Include conflict information in the _conflicts field of a doc.\n   * @param {Boolean} options.attachments - Include attachment data as base64-encoded string.\n   * @param {String} options.startkey - Get documents with IDs in range.\n   * @param {String} options.endkey - Get documents with IDs in a certain range (inclusive/inclusive).\n   * @param {Boolean} options.inclusive_end - Include documents having an ID equal to the given options.endkey. Default: true.\n   * @param {Number} options.limit - Maximum number of documents to return.\n   * @param {Number} options.skip - Number of docs to skip before returning (warning: poor performance on IndexedDB/LevelDB!).\n   * @param {Boolean} options.descending - Reverse the order of the output documents.\n   * @param {String} options.key - Only return documents with IDs matching this string key.\n   * @param {Array} options.keys - Array of string keys to fetch in a single shot.\n   * @example\n   * db.allDocs({\n   *    limit: 5,\n   *    include_docs: true\n   * }).then(function(resp) {\n   *    expect(resp.status).toBe(200);\n   *    expect(resp.data.rows).toBeDefined();\n   *    expect(resp.data.rows.length).toBe(5);\n   * }).catch(function (err) {\n   *    console.log(err);\n   * });\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  allDocs(options) {\n    this.log.logApi('allDocs', options);\n    return this.adapter.get(`/_all_docs`, {\n      params: options\n    });\n  }\n\n  /**\n   * @description Retrieves a document, specified by docId.\n   * @example\n   * db.get(testObj._id).then(function (resp) {\n   *    expect(resp.status).toBe(200);\n   *    expect(resp.data._rev).toBeDefined();\n   * }).catch(function(err){\n   *    console.warn(err);\n   * });\n   * @param {String} docId - The id of the document\n   * @param {Object} options - The options object\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  get(docId, options) {\n    this.log.logApi('get', docId);\n    if (!docId) {\n      throw new Error('db.get(docId) - Must provide a document _id!');\n    }\n    return this.adapter.get(`/${docId}`, options);\n  }\n\n  /**\n   * @description Put a document\n   * @example\n   * var doc = {\n   *    _id: 'test-doc1',\n   *    name: 'New Doc'\n   * };\n   * db.put(doc).then(function(resp){\n   *    console.log(resp);\n   * }).catch(function(err){\n   *    console.warn(err);\n   * });\n   * @param {Object} doc - The document object, must have _id  for creation, and _rev for updating\n   * @param {Object} options - The options to send with the request\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  put(doc, options) {\n    this.log.logApi('put', doc);\n    if (!doc) {\n      throw new Error('db.put(doc) - Must provide a document object!');\n    }\n    if (!doc._id) {\n      throw new Error('db.put(doc) - Must provide a _id on the document object!');\n    }\n    if (doc._rev) {\n      options = options || {\n        params: {\n          rev: doc._rev\n        }\n      };\n    }\n    return this.adapter.put(`/${doc._id}`, doc, options).then(this.adapter.parseJSON);\n  }\n\n  /**\n   * @description I handle creating a new document with a generated _id\n   * @example\n   * @param {Object} doc - A document object\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  post(doc) {\n    if (!doc) {\n      throw new Error('db.put(doc) - Must provide a document object!');\n    }\n    doc._id = this.utils.uuid();\n    return this.put(doc);\n  }\n\n  /**\n   * @description I handle removing a document from the data store.\n   * @example\n   * db.get(testObj._id).then(function (resp) {\n   *    testObj._rev = resp.data._rev;\n   *    db.remove(testObj._id, testObj._rev).then(function (res) {\n   *      expect(res.status).toBe(200);\n   *    });\n   * });\n   * @description\n   * @param {String} id - The documents _id\n   * @param {String} rev - The documents _rev\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  remove(id, rev) {\n    this.log.logApi('remove', {\n      id: id,\n      rev: rev\n    });\n    if (!id) {\n      throw new Error('db.remove(id, rev) - Must provide a id!');\n    }\n    if (!rev) {\n      throw new Error('db.remove(id, rev) - Must provide a rev!');\n    }\n    return this.adapter.delete(`/${id}`, {\n      params: {\n        rev: rev\n      }\n    }).then(this.adapter.parseJSON);\n  }\n\n  /**\n   * @description Get an attachment from the data store.\n   * @example\n   * var testAttachmentDoc = 'test-doc-attachment-' + Date.now();\n   * db.getAttachment(testAttachmentDoc, 'file.html').then(function (resp) {\n   *    expect(resp.ok).toBe(true);\n   * });\n   * @param {String} id - The documents _id\n   * @param {String} attachmentId - The documents attachment name\n   * @param {String} contentType - The documents attachment Content Type\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  getAttachment(id, attachmentId, contentType) {\n    this.log.logApi('getAttachment', {\n      id: id,\n      attachment: attachmentId\n    });\n    if (!id) {\n      throw new Error('db.getAttachment(id, attachmentId) - Must provide a document _id!');\n    }\n    if (!attachmentId) {\n      throw new Error('db.getAttachment(id, attachmentId) - Must provide a document attachment!');\n    }\n    return this.adapter.request(`${id}/${attachmentId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': contentType || 'application/octet-stream'\n      }\n    });\n  }\n\n  /**\n   * @description Save an attachment to the data store.\n   * @example\n   * var aFileParts = ['<a id=\"a\"><b id=\"b\">hey!</b></a>'];\n   * var myBlob = new Blob(aFileParts, {\n   *    type: 'text/html'\n   * });\n   * db.get(testAttachmentDoc).then(function (resp) {\n   *    expect(resp.ok).toBe(true);\n   *    db.saveAttachment(resp.data._id, resp.data._rev, 'file.html', myBlob.type, myBlob).then(function (resp) {\n   *      expect(resp.ok).toBe(true);\n   *    });\n   * });\n   * @param {String} id - The documents _id\n   * @param {String} rev - The documents _rev\n   * @param {String} filename - The documents attachment name\n   * @param {String} type - The attachment type\n   * @param {Blob} file - The actual attachment Blob\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  saveAttachment(id, rev, filename, type, file) {\n    this.log.logApi('saveAttachment', file);\n    return this.adapter.request(`${id}/${filename}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': type || 'application/octet-stream'\n      },\n      params: {\n        rev: rev\n      },\n      body: file\n    });\n  }\n\n  /**\n   * @description Bulk insert or remove documents from the data store.\n   * Create, update or delete multiple documents. The docs argument is an array of documents.\n   * If you omit an _id parameter on a given document, the database will create a new document and assign the ID for you.\n   * To update a document, you must include both an _id parameter and a _rev parameter, which should match the ID and revision of the document on which to base your updates.\n   * To delete a document, include a _deleted parameter with the value true.\n   * @example\n   * var docs = [{\n   *   _id: 'test-doc-1-' + Date.now(),\n   *   name: 'Test Doc 1'\n   * },\n   * {\n   *   _id: 'test-doc-2-' + Date.now(),\n   *   name: 'Test Doc 2'\n   * }];\n   * db.bulkDocs(docs).then(function(resp) {\n   *   expect(resp.status).toBe(201);\n   *   expect(resp.data.length).toBe(2);\n   * });\n   * @param {Array} docs - An array of document objects\n   * @return {Promise <Response, Error>} A promise that is resolved/rejected upon success/failure.\n   */\n  bulkDocs(docs) {\n    if (!docs) {\n      throw new Error('bulkDocs - Must provide an array of documents!');\n    }\n    this.log.logApi('bulkDocs', docs);\n    return this.adapter.post('/_bulk_docs', {\n      docs: docs\n    }).then(this.adapter.parseJSON);\n  }\n\n  /**\n   * @description A list of changes made to documents in the database, in the order they were made. It returns an object with the method cancel(), which you call if you don’t want to listen to new changes anymore.\n   * It is an event emitter and will emit a 'change' event on each document change, a 'complete' event when all the changes have been processed, and an 'error' event when an error occurs.\n   * In addition to the 'change' event, any change will also emit a 'create', 'update', or 'delete' event.\n   * @example\n   * var db = new px.mobile.DB('testdb', {baseUrl: 'adapter://localhost:5984/default'});\n   * var changes = db.changes({\n   *    since: 'now',\n   *    live: true,\n   *    include_docs: true\n   * })\n   * .on('change', function(change) {\n   *    console.warn('Change', change);\n   * })\n   * .on('complete', function(info) {\n   *    console.warn('Changes completed', info);\n   * })\n   * .on('error', function (err) {\n   *    console.log(err);\n   * });\n   * changes.cancel(); // whenever you want to cancel\n   * @param {Object} options - The options to send with the changes request. All options default to false unless otherwise specified.\n   * @param {Boolean} options.live - Will emit change events for all future changes until cancelled.\n   * @param {Boolean} options.include_docs - Include the associated document with each change.\n   * @param {Boolean} options.conflicts - Include conflicts.\n   * @param {Boolean} options.attachments -Include attachments.\n   * @param {Boolean} options.binary - Return attachment data as Blobs/Buffers, instead of as base64-encoded strings.\n   * @param {Boolean} options.descending - Reverse the order of the output documents.\n   * @param {Number} options.since - Start the results from the change immediately after the given sequence number. You can also pass 'now' if you want only new changes (when live is true).\n   * @param {Number} options.limit - Limit the number of results to this number.\n   * @param {Number} options.timeout - Request timeout (in milliseconds).\n   * @return {Object} An object with cancel() on(event) methods.\n   */\n  changes(options) {\n    var self = this;\n    var defaults = {\n      live: false,\n      include_docs: false,\n      conflicts: false,\n      attachments: false,\n      binary: false,\n      descending: false,\n      since: 0,\n      limit: null,\n      heartbeat: 1000\n    };\n\n    options = this.utils.extend(defaults, options);\n\n\n    self.log.logApi('changes', options);\n\n    //changes request\n    var _fetchChanges = function() {\n      self.log.logApi('_fetchChanges', options);\n\n      return self.adapter.get('/_changes', {\n        params: options\n      }).then(self.adapter.parseJSON).then(function(resp) {\n        options.since = resp.data.last_seq;\n\n        if (_callbacks.change) {\n          if (resp.data.results) {\n            resp.data.results.forEach(function(change) {\n              _callbacks.change(change);\n              self.log.logApi('change', change);\n            });\n          }\n        }\n\n        if (resp.data.results.length === 0) {\n          if (_callbacks.complete) {\n            _callbacks.complete(resp);\n          }\n          self.log.logApi('complete', resp);\n        }\n\n        return resp;\n      }).catch(function(err) {\n        if (_callbacks.error) {\n          _callbacks.error(err);\n        }\n        return err;\n      });\n    };\n\n    var _callbacks = {};\n\n    //changes feed\n    var _feed = setInterval(function() {\n      self.log.logApi('_feed', options);\n      _fetchChanges();\n    }, options.heartbeat);\n\n    return {\n      on: function(e, cb) {\n        _callbacks[e] = cb;\n        self.log.logApi('on', options);\n        return this;\n      },\n      cancel: function() {\n        self.log.logApi('cancel', options);\n        clearInterval(_feed);\n        return this;\n      }\n    };\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DB",
    "memberof": "js/db.js",
    "longname": "js/db.js~DB",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/db.js",
    "importStyle": "DB",
    "description": null,
    "examples": [
      "var db = new px.mobile.DB('db1', {\n   baseUrl: 'http://localhost:5984/default'\n});\ndb.get('sync-user1').then(function(resp){\n   console.log(json);\n});"
    ],
    "lineNumber": 18,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "The DB class was created to help web developers build applications that work as well offline as they do online."
      }
    ],
    "interface": false,
    "extends": [
      "BaseClass"
    ],
    "implements": [
      "MyInterface2"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#constructor",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "The constructor method that returns an instance of this DB class."
      },
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the instance"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DB"
      ],
      "spread": false,
      "description": "Instance of the DB class."
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "adapter",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#adapter",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Class"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "adapter",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#adapter",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "info",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#info",
    "access": null,
    "description": null,
    "examples": [
      "db.info().then(function(resp){\n   assert.equal(resp.status, 200);\n   assert.ok(resp.data);\n   assert.ok(resp.data.db_name);\n   assert.ok(resp.data.update_seq);\n}).catch(function (err) {\n   console.log(err);\n});"
    ],
    "lineNumber": 59,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "I fetch general information of the database."
      }
    ],
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "allDocs",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#allDocs",
    "access": null,
    "description": null,
    "examples": [
      "db.allDocs({\n   limit: 5,\n   include_docs: true\n}).then(function(resp) {\n   expect(resp.status).toBe(200);\n   expect(resp.data.rows).toBeDefined();\n   expect(resp.data.rows.length).toBe(5);\n}).catch(function (err) {\n   console.log(err);\n});"
    ],
    "lineNumber": 90,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Fetch multiple documents, indexed and sorted by the _id. Deleted documents are only included if options.keys is specified."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options object"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.include_docs",
        "description": "Include the document itself in each row in the doc field. Otherwise by default you only get the _id and _rev properties."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.conflicts",
        "description": "Include conflict information in the _conflicts field of a doc."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.attachments",
        "description": "Include attachment data as base64-encoded string."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.startkey",
        "description": "Get documents with IDs in range."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.endkey",
        "description": "Get documents with IDs in a certain range (inclusive/inclusive)."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.inclusive_end",
        "description": "Include documents having an ID equal to the given options.endkey. Default: true."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.limit",
        "description": "Maximum number of documents to return."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.skip",
        "description": "Number of docs to skip before returning (warning: poor performance on IndexedDB/LevelDB!)."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.descending",
        "description": "Reverse the order of the output documents."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "options.key",
        "description": "Only return documents with IDs matching this string key."
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "options.keys",
        "description": "Array of string keys to fetch in a single shot."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#get",
    "access": null,
    "description": null,
    "examples": [
      "db.get(testObj._id).then(function (resp) {\n   expect(resp.status).toBe(200);\n   expect(resp.data._rev).toBeDefined();\n}).catch(function(err){\n   console.warn(err);\n});"
    ],
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Retrieves a document, specified by docId."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "docId",
        "description": "The id of the document"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "put",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#put",
    "access": null,
    "description": null,
    "examples": [
      "var doc = {\n   _id: 'test-doc1',\n   name: 'New Doc'\n};\ndb.put(doc).then(function(resp){\n   console.log(resp);\n}).catch(function(err){\n   console.warn(err);\n});"
    ],
    "lineNumber": 134,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Put a document"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": "The document object, must have _id  for creation, and _rev for updating"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to send with the request"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "post",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#post",
    "access": null,
    "description": null,
    "examples": [
      ""
    ],
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "I handle creating a new document with a generated _id"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "doc",
        "description": "A document object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#remove",
    "access": null,
    "description": null,
    "examples": [
      "db.get(testObj._id).then(function (resp) {\n   testObj._rev = resp.data._rev;\n   db.remove(testObj._id, testObj._rev).then(function (res) {\n     expect(res.status).toBe(200);\n   });\n});"
    ],
    "lineNumber": 180,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "I handle removing a document from the data store."
      },
      {
        "tagName": "@description",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The documents _id"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "rev",
        "description": "The documents _rev"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getAttachment",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#getAttachment",
    "access": null,
    "description": null,
    "examples": [
      "var testAttachmentDoc = 'test-doc-attachment-' + Date.now();\ndb.getAttachment(testAttachmentDoc, 'file.html').then(function (resp) {\n   expect(resp.ok).toBe(true);\n});"
    ],
    "lineNumber": 210,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Get an attachment from the data store."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The documents _id"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "attachmentId",
        "description": "The documents attachment name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "contentType",
        "description": "The documents attachment Content Type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "saveAttachment",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#saveAttachment",
    "access": null,
    "description": null,
    "examples": [
      "var aFileParts = ['<a id=\"a\"><b id=\"b\">hey!</b></a>'];\nvar myBlob = new Blob(aFileParts, {\n   type: 'text/html'\n});\ndb.get(testAttachmentDoc).then(function (resp) {\n   expect(resp.ok).toBe(true);\n   db.saveAttachment(resp.data._id, resp.data._rev, 'file.html', myBlob.type, myBlob).then(function (resp) {\n     expect(resp.ok).toBe(true);\n   });\n});"
    ],
    "lineNumber": 249,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Save an attachment to the data store."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The documents _id"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "rev",
        "description": "The documents _rev"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "filename",
        "description": "The documents attachment name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The attachment type"
      },
      {
        "nullable": null,
        "types": [
          "Blob"
        ],
        "spread": false,
        "optional": false,
        "name": "file",
        "description": "The actual attachment Blob"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "bulkDocs",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#bulkDocs",
    "access": null,
    "description": null,
    "examples": [
      "var docs = [{\n  _id: 'test-doc-1-' + Date.now(),\n  name: 'Test Doc 1'\n},\n{\n  _id: 'test-doc-2-' + Date.now(),\n  name: 'Test Doc 2'\n}];\ndb.bulkDocs(docs).then(function(resp) {\n  expect(resp.status).toBe(201);\n  expect(resp.data.length).toBe(2);\n});"
    ],
    "lineNumber": 285,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Bulk insert or remove documents from the data store.\nCreate, update or delete multiple documents. The docs argument is an array of documents.\nIf you omit an _id parameter on a given document, the database will create a new document and assign the ID for you.\nTo update a document, you must include both an _id parameter and a _rev parameter, which should match the ID and revision of the document on which to base your updates.\nTo delete a document, include a _deleted parameter with the value true."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "docs",
        "description": "An array of document objects"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise <Response, Error>"
      ],
      "spread": false,
      "description": "A promise that is resolved/rejected upon success/failure."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "changes",
    "memberof": "js/db.js~DB",
    "longname": "js/db.js~DB#changes",
    "access": null,
    "description": null,
    "examples": [
      "var db = new px.mobile.DB('testdb', {baseUrl: 'adapter://localhost:5984/default'});\nvar changes = db.changes({\n   since: 'now',\n   live: true,\n   include_docs: true\n})\n.on('change', function(change) {\n   console.warn('Change', change);\n})\n.on('complete', function(info) {\n   console.warn('Changes completed', info);\n})\n.on('error', function (err) {\n   console.log(err);\n});\nchanges.cancel(); // whenever you want to cancel"
    ],
    "lineNumber": 328,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "A list of changes made to documents in the database, in the order they were made. It returns an object with the method cancel(), which you call if you don’t want to listen to new changes anymore.\nIt is an event emitter and will emit a 'change' event on each document change, a 'complete' event when all the changes have been processed, and an 'error' event when an error occurs.\nIn addition to the 'change' event, any change will also emit a 'create', 'update', or 'delete' event."
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to send with the changes request. All options default to false unless otherwise specified."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.live",
        "description": "Will emit change events for all future changes until cancelled."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.include_docs",
        "description": "Include the associated document with each change."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.conflicts",
        "description": "Include conflicts."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.attachments",
        "description": "Include attachments."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.binary",
        "description": "Return attachment data as Blobs/Buffers, instead of as base64-encoded strings."
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "options.descending",
        "description": "Reverse the order of the output documents."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.since",
        "description": "Start the results from the change immediately after the given sequence number. You can also pass 'now' if you want only new changes (when live is true)."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.limit",
        "description": "Limit the number of results to this number."
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "options.timeout",
        "description": "Request timeout (in milliseconds)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "An object with cancel() on(event) methods."
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/dom.js",
    "memberof": null,
    "longname": "js/dom.js",
    "access": null,
    "description": null,
    "lineNumber": 6,
    "content": "/**\n * dom class provides various utility methods on a document element.\n * @example\n * var $ = selector => new DOM(selector);\n */\nexport default class DOM{\n\n\n  constructor(selector, context) {\n    console.time('dom');\n    var matches = {\n      '#': 'getElementById',\n      '.': 'getElementsByClassName',\n      '@': 'getElementsByName',\n      '=': 'getElementsByTagName',\n      '*': 'querySelectorAll'\n    };\n    var match = matches[selector[0]];\n    if(!match){\n      match = 'querySelectorAll';\n    }\n\n      console.warn('dom()', matches, selector);\n\n\n\n\n\n    var out = null,\n      el;\n\n    try {\n      el = (((context === undefined) ? document : context)[matches](selector.slice(1)));\n      out = ((el.length < 2) ? el[0] : el);\n       console.warn('found', el);\n    } catch (err) {\n\n      console.error('error', selector, 'not found');\n    }\n\n\n\n    this.length = el.length || 0;\n    Object.assign(this, out);\n    console.timeEnd('dom');\n    return this;\n  }\n\n  find(selector, context) {\n\n  }\n\n\n\n  clone() {\n\n    }\n    /**\n     * @param {Function} callback A callback to call on each element\n     */\n  each(callback) {\n    // convert this to Array to use for...of\n    for (let el of Array.from(this)) {\n      callback.call(el);\n    }\n    return this;\n  }\n\n  /**\n   * Add a class to selected elements\n   * @param {String} className The class name to add\n   */\n  addClass(className) {\n    return this.each(function() {\n      if (this.classList) {\n        this.classList.add(className);\n      } else {\n        this.className += ' ' + className;\n      }\n    });\n  }\n\n  /**\n   * Remove a class from selected elements\n   * @param {String} className The class name to remove\n   */\n  removeClass(className) {\n    return this.each(function() {\n      this.classList.remove(className);\n    });\n  }\n\n  /**\n   * Check to see if the element has a class\n   * (Note: Only checks the first elements if more than one is selected)\n   * @param {String} className The class name to check\n   */\n  hasClass(className) {\n    if (this.classList) {\n      return this.classList.contains(className);\n    } else {\n      return new RegExp('(^| )' + className + '( |$)', 'gi').test(this.className);\n    }\n  }\n\n  toggleClass(className) {\n    var el = this;\n    if (el.classList) {\n      el.classList.toggle(className);\n    } else {\n      var classes = el.className.split(' ');\n      var existingIndex = classes.indexOf(className);\n\n      if (existingIndex >= 0) {\n        classes.splice(existingIndex, 1);\n      } else {\n        classes.push(className);\n      }\n      el.className = classes.join(' ');\n    }\n  }\n\n  css(prop, value) {\n    if (value) {\n      this.style[prop] = value;\n      return this;\n    } else if (prop) {\n      return this.style[prop];\n    } else {\n      return this.style;\n    }\n  }\n\n  attr(name, value) {\n    name = name.toLowerCase();\n\n    if (value) {\n      this.setAttribute(name, value);\n      return this;\n    } else {\n      return this.getAttribute(name);\n    }\n  }\n\n  data(name, value) {\n    if (value) {\n      this.setAttribute('data-' + name, value);\n      return this;\n    } else {\n      return this.getAttribute('data-' + name);\n    }\n  }\n\n  on(event, callback) {\n    return this.each(function() {\n      this.addEventListener(event, callback, false);\n    });\n  }\n\n  _on(eventName, eventHandler) {\n    eventType = eventType.split(' ');\n    for (var i = 0; i < eventType.length; i++) {\n      this.addEventListener(eventType[i], callback);\n    }\n    return this;\n  }\n\n  off(eventName, eventHandler) {\n    this.removeEventListener(eventName, eventHandler);\n  }\n\n  trigger(eventName, eventData) {\n    var event;\n    if (window.CustomEvent) {\n      event = new CustomEvent(eventName, {\n        detail: eventData\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(eventName, true, true, eventData);\n    }\n    return this.dispatchEvent(event);\n  }\n\n  empty() {\n    this.innerHTML = '';\n    return this;\n  }\n\n  html(html) {\n    if (html) {\n      this.innerHTML = html;\n      return this;\n    } else {\n      return this.innerHTML;\n    }\n  }\n\n  text(text) {\n    if (text) {\n      this.textContent = text;\n      return this;\n    } else {\n      return this.textContent;\n    }\n  }\n  next() {\n    return this.nextElementSibling;\n  }\n  prev() {\n\n  }\n  parent() {\n    return this.parentNode;\n  }\n  child() {\n\n  }\n  position() {\n\n  }\n}\n\nexport var $ = selector => new DOM(selector);\n\nvar dom = function(selector, context, undefined) {\n\n\n  var matches = {\n    '#': 'getElementById',\n    '.': 'getElementsByClassName',\n    '@': 'getElementsByName',\n    '=': 'getElementsByTagName',\n    '*': 'querySelectorAll'\n  }[selector[0]];\n\n  //console.warn('dom()', matches, selector);\n  var out = null,\n    el;\n  try {\n    el = (((context === undefined) ? document : context)[matches](selector.slice(1)));\n    out = ((el.length < 2) ? el[0] : el);\n    //console.warn('found', el);\n  } catch (err) {\n    console.error('error', selector, 'not found');\n  }\n\n  return out;\n};\n\n\n\n// TODO: Extend Element on Window.\n\n//dom('#iddiv').find('.inside')\nwindow.Element.prototype.find = function(selector) {\n  return dom(selector, this);\n};\n\n//dom(el).clone()\nwindow.Element.prototype.clone = function() {\n  return this.cloneNode(true);\n};\n\n//dom(el).hasClass(name)\nwindow.Element.prototype.hasClass = function(className) {\n  if (this.classList) {\n    return this.classList.contains(className);\n  } else {\n    return new RegExp('(^| )' + className + '( |$)', 'gi').test(this.className);\n  }\n};\n\n//dom(el).addClass(name)\nwindow.Element.prototype.addClass = function(className) {\n  if (this.classList) {\n    this.classList.add(className);\n  } else {\n    this.className += ' ' + className;\n  }\n  return this;\n};\n\n//dom(el).removeClass(name)\nwindow.Element.prototype.removeClass = function(className) {\n  var el = this;\n  if (el.classList) {\n    el.classList.remove(className);\n  } else {\n    el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n  }\n  return this;\n};\n\n//dom(el).toggleClass(name)\nwindow.Element.prototype.toggleClass = function(className) {\n  var el = this;\n  if (el.classList) {\n    el.classList.toggle(className);\n  } else {\n    var classes = el.className.split(' ');\n    var existingIndex = classes.indexOf(className);\n\n    if (existingIndex >= 0) {\n      classes.splice(existingIndex, 1);\n    } else {\n      classes.push(className);\n    }\n    el.className = classes.join(' ');\n  }\n};\n\n//dom().css('prop', 'value') support\nwindow.Element.prototype.css = function(prop, value) {\n  if (value) {\n    this.style[prop] = value;\n    return this;\n  } else if (prop) {\n    return this.style[prop];\n  } else {\n    return this.style;\n  }\n};\n\n//dom(selector).attr('prop', 'value')\nwindow.Element.prototype.attr = function(name, value) {\n  name = name.toLowerCase();\n\n  if (value) {\n    this.setAttribute(name, value);\n    return this;\n  } else {\n    return this.getAttribute(name);\n  }\n};\n\nwindow.Element.prototype.data = function(name, value) {\n  if (value) {\n    this.setAttribute('data-' + name, value);\n    return this;\n  } else {\n    return this.getAttribute('data-' + name);\n  }\n};\n\n\n\nwindow.Element.prototype.on = function(eventType, callback) {\n  eventType = eventType.split(' ');\n  for (var i = 0; i < eventType.length; i++) {\n    this.addEventListener(eventType[i], callback);\n  }\n  return this;\n};\n\n//px.mobile.dom('#sandbox').off('click', handler);\nwindow.Element.prototype.off = function(eventName, eventHandler) {\n  this.removeEventListener(eventName, eventHandler);\n};\n\n\n//px.mobile.dom('#sandbox').trigger('custom-event', {name: 'value'});\nwindow.Element.prototype.trigger = function(eventName, eventData) {\n  var event;\n  if (window.CustomEvent) {\n    event = new CustomEvent(eventName, {\n      detail: eventData\n    });\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(eventName, true, true, eventData);\n  }\n  return this.dispatchEvent(event);\n};\n\n\n//dom(el).empty();\nwindow.Element.prototype.empty = function() {\n  this.innerHTML = '';\n  return this;\n};\n\n//dom(el).html();\nwindow.Element.prototype.html = function(html) {\n  if (html) {\n    this.innerHTML = html;\n    return this;\n  } else {\n    return this.innerHTML;\n  }\n};\n\n//dom(el).text();\nwindow.Element.prototype.text = function(text) {\n  if (text) {\n    this.textContent = text;\n    return this;\n  } else {\n    return this.textContent;\n  }\n};\n\n//dom(el).next();\nwindow.Element.prototype.next = function() {\n  return this.nextElementSibling;\n};\n\n//dom(el).parent();\nwindow.Element.prototype.parent = function() {\n  return this.parentNode;\n};\n\n//dom(el).remove();\nwindow.Element.prototype.remove = function() {\n  return this.parentNode.removeChild(this);\n};\n\nwindow.Element.prototype.child = function() {\n  return this.children;\n};\n//dom(el).position();\nwindow.Element.prototype.position = function() {\n  var pos = {\n    left: this.offsetLeft,\n    top: this.offsetTop\n  };\n  return pos;\n};\n\n// TODO: Extend nodelist\n\n//dom().addClass('name');\nwindow.NodeList.prototype.addClass = function(name) {\n  this.each(function(el) {\n    el.classList.add(name);\n  });\n  return this;\n};\n\n// $().removeClass('name');\nwindow.NodeList.prototype.removeClass = function(name) {\n  this.each(function(el) {\n    el.classList.remove(name);\n  });\n  return this;\n};\n\n\n//dom.extend({}, objA, objB);\ndom.extend = function(out) {\n  out = out || {};\n  for (var i = 1; i < arguments.length; i++) {\n    if (!arguments[i]) {\n      continue;\n    }\n    for (var key in arguments[i]) {\n      if (arguments[i].hasOwnProperty(key)) {\n        out[key] = arguments[i][key];\n      }\n    }\n  }\n  return out;\n};\n\n\n\n// doing a find in a NodeList doesnt really work. I had a function that\n// would look inside and get the element but it was pretty big and\n// required recusive searching inside NodeLists. So I would suggest just\n// using a '*' selection method\nwindow.NodeList.prototype.find = function find(elem) {\n  console.error('You cannot find in a NodeList. Just use $(*selector %s)', elem);\n  return this;\n};\n\n// another useful one for doing $('.inside').each()\nwindow.NodeList.prototype.each = Array.prototype.forEach;\n\n\nwindow.NodeList.prototype.attr = function(name, value) {\n  this.each(function(el) {\n    if (value) {\n      el.setAttribute(name, value);\n    } else {\n      return el.getAttribute(name);\n    }\n  });\n  return this;\n};\n\nwindow.NodeList.prototype.toggleClass = function(className) {\n  this.each(function(el) {\n    el.toggleClass(className);\n  });\n  return this;\n};\n\n\nwindow.NodeList.prototype.css = function(prop, value) {\n  this.each(function(el) {\n    el.css(prop, value);\n  });\n  return this;\n};\n\n\n\nwindow.NodeList.prototype.on = function(eventType, callback) {\n  this.each(function(el) {\n    el.on(eventType, callback);\n  });\n  return this;\n};\n\n\n\nwindow.NodeList.prototype.first = function() {\n  return (this.length < 2) ? this : this[0];\n};\n\nwindow.NodeList.prototype.last = function() {\n  // if there are many items, return the last\n  return (this.length > 1) ? this[this.length - 1] : this;\n};\n\nexport default dom;\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "DOM",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~DOM",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": "DOM",
    "description": "dom class provides various utility methods on a document element.",
    "examples": [
      "var $ = selector => new DOM(selector);"
    ],
    "lineNumber": 6,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "length",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#length",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "find",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#find",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clone",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#clone",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "each",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#each",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "A callback to call on each element"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "addClass",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#addClass",
    "access": null,
    "description": "Add a class to selected elements",
    "lineNumber": 73,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "The class name to add"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "className",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#className",
    "access": null,
    "description": null,
    "lineNumber": 78,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "removeClass",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#removeClass",
    "access": null,
    "description": "Remove a class from selected elements",
    "lineNumber": 87,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "The class name to remove"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hasClass",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#hasClass",
    "access": null,
    "description": "Check to see if the element has a class\n(Note: Only checks the first elements if more than one is selected)",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "className",
        "description": "The class name to check"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toggleClass",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#toggleClass",
    "access": null,
    "description": null,
    "lineNumber": 106,
    "undocument": true,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "css",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#css",
    "access": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "attr",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#attr",
    "access": null,
    "description": null,
    "lineNumber": 134,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#data",
    "access": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#on",
    "access": null,
    "description": null,
    "lineNumber": 154,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_on",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#_on",
    "access": null,
    "description": null,
    "lineNumber": 160,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "eventHandler",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "off",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#off",
    "access": null,
    "description": null,
    "lineNumber": 168,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "eventHandler",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "trigger",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#trigger",
    "access": null,
    "description": null,
    "lineNumber": 172,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "eventData",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "empty",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#empty",
    "access": null,
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "innerHTML",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#innerHTML",
    "access": null,
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "html",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#html",
    "access": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "params": [
      {
        "name": "html",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "innerHTML",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#innerHTML",
    "access": null,
    "description": null,
    "lineNumber": 192,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "text",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#text",
    "access": null,
    "description": null,
    "lineNumber": 199,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "textContent",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#textContent",
    "access": null,
    "description": null,
    "lineNumber": 201,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "next",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#next",
    "access": null,
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prev",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#prev",
    "access": null,
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "parent",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#parent",
    "access": null,
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "child",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#child",
    "access": null,
    "description": null,
    "lineNumber": 216,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "position",
    "memberof": "js/dom.js~DOM",
    "longname": "js/dom.js~DOM#position",
    "access": null,
    "description": null,
    "lineNumber": 219,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "$",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~$",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": "{$}",
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "find",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~find",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "clone",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~clone",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 261,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "hasClass",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~hasClass",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 266,
    "undocument": true,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "addClass",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~addClass",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 275,
    "undocument": true,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "removeClass",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~removeClass",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 285,
    "undocument": true,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "toggleClass",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~toggleClass",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 296,
    "undocument": true,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "css",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~css",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 314,
    "undocument": true,
    "params": [
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "attr",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~attr",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 326,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "data",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~data",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "on",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~on",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 348,
    "undocument": true,
    "params": [
      {
        "name": "eventType",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "off",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~off",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 357,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "eventHandler",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "trigger",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~trigger",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 363,
    "undocument": true,
    "params": [
      {
        "name": "eventName",
        "types": [
          "*"
        ]
      },
      {
        "name": "eventData",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "empty",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~empty",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 378,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "html",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~html",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 384,
    "undocument": true,
    "params": [
      {
        "name": "html",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "text",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~text",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 394,
    "undocument": true,
    "params": [
      {
        "name": "text",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "next",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~next",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 404,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "parent",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~parent",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 409,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "remove",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~remove",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 414,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "child",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~child",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 418,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "position",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~position",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 422,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "addClass",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~addClass",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 433,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "removeClass",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~removeClass",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 441,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "extend",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~extend",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 450,
    "undocument": true,
    "params": [
      {
        "name": "out",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "find",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~find",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 471,
    "undocument": true,
    "params": [
      {
        "name": "elem",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "attr",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~attr",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 480,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "toggleClass",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~toggleClass",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 491,
    "undocument": true,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "css",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~css",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 499,
    "undocument": true,
    "params": [
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "on",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~on",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 508,
    "undocument": true,
    "params": [
      {
        "name": "eventType",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "first",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~first",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 517,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "last",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~last",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 521,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "dom",
    "memberof": "js/dom.js",
    "longname": "js/dom.js~dom",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/dom.js",
    "importStyle": "dom",
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "params": [
      {
        "name": "selector",
        "types": [
          "*"
        ]
      },
      {
        "name": "context",
        "types": [
          "*"
        ]
      },
      {
        "name": "undefined",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/http.js",
    "memberof": null,
    "longname": "js/http.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/*globals Request, Promise*/\n'use strict';\nimport BaseClass from './base';\nimport Logger from './log';\nimport Interfaces from './interfaces';\n\n/**\n * HTTP class provides an abstraction layer for HTTP calls.\n * @example\n * var $http = new px.mobile.HTTP('http1', {\n *  baseUrl: window.location.origin\n * });\n */\nexport default class HTTP extends BaseClass {\n\n  /**\n   * Create a new instance of a HTTP service.\n   * @constructor\n   * @param {String} name - The name of the service\n   * @param {Object} options - The default options to pass\n   * @return {HTTP} An instance of the HTTP class\n   */\n  constructor(name = 'http', options = {\n    baseUrl: '/default'\n  }) {\n    super(name, options);\n\n    console.warn('HTTP', this, options);\n\n    if (!options.baseUrl) {\n      throw new Error('HTTP: Must provide a baseUrl');\n    }\n\n    return this;\n  }\n\n  /**\n   *  I handle checking the response status code of a HTTP request.\n   * @param {Response} response A Response object\n   * @return {Response} The original response\n   */\n  checkStatus(response) {\n    console.warn(response.status, response.statusText, response.url, response);\n    if (response.status >= 200 && response.status < 300) {\n      return response;\n    } else {\n      var error = new Error(response.statusText);\n      error.response = response;\n      return response;\n    }\n  }\n\n  /**\n   * I handle parsing the JSON of a response.\n   * @param {Response} response A Response object\n   * @return {Response} The original response with a data property that is the parsed JSON\n   */\n  parseJSON(response) {\n    if (!response) {\n      throw new Error('Must pass a response object to parseJSON!');\n    }\n    return response.json().then(function(json) {\n      response.data = json;\n      return response;\n    });\n  }\n\n  /**\n   *  I make a HTTP request for JSON.\n   * @example\n   * $http.getJSON('/default/_all_docs', {limit: 5}).then(function(resp){\n   *    //handle json\n   * }).catch(function(err){\n   *    //handle error\n   * });\n   * @param {String} url - The url\n   * @param {Object} options - Request options object\n   * @return {Promise} A promise that resolves a response\n   */\n  getJSON(url = '', options = {}) {\n    let req = new Request(url, options || {\n      method: 'GET'\n    });\n    return fetch(req)\n      .then(this.checkStatus)\n      .then(this.parseJSON);\n  }\n\n  /**\n   * The response object has these properties:\n   * @example\n   * $http.request('/default', {\n   *    method: 'POST',\n   *    data: data\n   * }).then(function(resp){\n   *    //handle response\n   * }).catch(function(err){\n   *    //handle error\n   * });\n   * @param {String} url - The url\n   * @param {Object} options - Options to pass\n   * @return {Promise} A promise that resolves a response\n   */\n  request(url, options) {\n    var config = this.utils.extend({\n      data: null,\n      params: null,\n      body: null,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }, options);\n\n    if (options.data) {\n      config.body = JSON.stringify(options.data);\n      delete config.data;\n    }\n\n    url = this.utils.resolveURL(this.baseUrl, url);\n    //url = this.utils.resolveURL(url);\n\n    if (options.params) {\n      url = this.utils.resolveURL(url, options.params);\n      delete options.params;\n    }\n\n    //this.log.logApi(`request => ${url}`, config);\n    this.log.logHttp(config.method, url);\n\n\n    let benchmark = this.log.logTime('request');\n    return new Promise((resolve, reject) => {\n      return fetch(new Request(url, config)).then((resp) => {\n        this.log.logHttp(resp.status + ' ' + benchmark.end(), resp, true);\n        //return this.parseJSON(resp).then(resolve, reject);\n        resp.data = {};\n        resolve(resp);\n      }, reject);\n    });\n  }\n\n  /**\n   * I make a HTTP GET request.\n   * @example\n   * $http.get('/default/_all_docs', {limit: 5}).then(function(resp){\n   *    //handle resp:Response\n   * }).catch(function(err){\n   *    //handle error\n   * });\n   * @param {String} url The url\n   * @param {Object} options Options to pass\n   * @return {Promise} A promise that resolves a response\n   */\n  get(url = '', options = {}) {\n    this.log.logApi('get', options);\n    return this.request(url, options).then(this.parseJSON);\n  }\n\n  /**\n   * I make a HTTP PUT request.\n   * @example\n  $http.put('/default/id', {name: 'value'}).then(function(resp){\n    //handle resp:Response\n  }).catch(function(err){\n    //handle error\n  });\n\n   * @param {String} url The url\n   * @param {Object} options Options to pass\n   * @return {Promise} A promise that resolves a response\n   */\n  put(url = '', data = null, options = {}) {\n    this.log.logApi('put', data);\n    return this.request(url, this.utils.extend({\n      method: 'PUT',\n      data: data\n    }, options));\n  }\n\n  /**\n   * I make a HTTP POST request.\n   * @example\n $http.post('/default', {name: 'value'}).then(function(resp){\n   //handle resp:Response\n }).catch(function(err){\n   //handle error\n });\n\n   * @param {String} url The url\n   * @param {Object} options Options to pass\n   * @return {Promise} A promise that resolves a response\n   */\n  post(url = '', data = null, options = {}) {\n    return this.request(url, this.utils.extend({\n      method: 'POST',\n      data: data\n    }, options));\n  }\n\n  /**\n   * I make a HTTP DELETE request.\n   * @example\n $http.delete('/default/id').then(function(resp){\n   //handle resp:Response\n }).catch(function(err){\n   //handle error\n });\n\n   * @param {String} url The url\n   * @param {Object} options Options to pass\n   * @return {Promise} A promise that resolves a response\n   */\n  delete(url = '', options = {}) {\n    return this.request(url, this.utils.extend({\n      method: 'DELETE'\n    }, options));\n  }\n\n  /**\n   * I make a HTTP HEAD request.\n   * @example\n  $http.head('/default/id').then(function(resp){\n    //handle resp:Response\n  }).catch(function(err){\n    //handle error\n  });\n\n   * @param {String} url The url\n   * @param {Object} options Options to pass\n   * @return {Promise} A promise that resolves a response\n   */\n  head(url = '', options = {}) {\n    return this.request(url, this.utils.extend({\n      method: 'HEAD'\n    }, options));\n  }\n\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "HTTP",
    "memberof": "js/http.js",
    "longname": "js/http.js~HTTP",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/http.js",
    "importStyle": "HTTP",
    "description": "HTTP class provides an abstraction layer for HTTP calls.",
    "examples": [
      "var $http = new px.mobile.HTTP('http1', {\n baseUrl: window.location.origin\n});"
    ],
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#constructor",
    "access": null,
    "description": "Create a new instance of a HTTP service.",
    "lineNumber": 23,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the service"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The default options to pass"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HTTP"
      ],
      "spread": false,
      "description": "An instance of the HTTP class"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "checkStatus",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#checkStatus",
    "access": null,
    "description": " I handle checking the response status code of a HTTP request.",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "Response"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "A Response object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Response"
      ],
      "spread": false,
      "description": "The original response"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "parseJSON",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#parseJSON",
    "access": null,
    "description": "I handle parsing the JSON of a response.",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "Response"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": "A Response object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Response"
      ],
      "spread": false,
      "description": "The original response with a data property that is the parsed JSON"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getJSON",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#getJSON",
    "access": null,
    "description": " I make a HTTP request for JSON.",
    "examples": [
      "$http.getJSON('/default/_all_docs', {limit: 5}).then(function(resp){\n   //handle json\n}).catch(function(err){\n   //handle error\n});"
    ],
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Request options object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves a response"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "request",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#request",
    "access": null,
    "description": "The response object has these properties:",
    "examples": [
      "$http.request('/default', {\n   method: 'POST',\n   data: data\n}).then(function(resp){\n   //handle response\n}).catch(function(err){\n   //handle error\n});"
    ],
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options to pass"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves a response"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#get",
    "access": null,
    "description": "I make a HTTP GET request.",
    "examples": [
      "$http.get('/default/_all_docs', {limit: 5}).then(function(resp){\n   //handle resp:Response\n}).catch(function(err){\n   //handle error\n});"
    ],
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options to pass"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves a response"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "put",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#put",
    "access": null,
    "description": "I make a HTTP PUT request.",
    "examples": [
      " $http.put('/default/id', {name: 'value'}).then(function(resp){\n   //handle resp:Response\n }).catch(function(err){\n   //handle error\n });"
    ],
    "lineNumber": 173,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options to pass"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves a response"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "post",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#post",
    "access": null,
    "description": "I make a HTTP POST request.",
    "examples": [
      "$http.post('/default', {name: 'value'}).then(function(resp){\n  //handle resp:Response\n}).catch(function(err){\n  //handle error\n});"
    ],
    "lineNumber": 194,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options to pass"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves a response"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "delete",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#delete",
    "access": null,
    "description": "I make a HTTP DELETE request.",
    "examples": [
      "$http.delete('/default/id').then(function(resp){\n  //handle resp:Response\n}).catch(function(err){\n  //handle error\n});"
    ],
    "lineNumber": 214,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options to pass"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves a response"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "head",
    "memberof": "js/http.js~HTTP",
    "longname": "js/http.js~HTTP#head",
    "access": null,
    "description": "I make a HTTP HEAD request.",
    "examples": [
      " $http.head('/default/id').then(function(resp){\n   //handle resp:Response\n }).catch(function(err){\n   //handle error\n });"
    ],
    "lineNumber": 233,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options to pass"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that resolves a response"
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/interface.js",
    "memberof": null,
    "longname": "js/interface.js",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "content": "/**\n * @description Taken from http://jscriptpatterns.blogspot.com/2013/01/javascript-interfaces.html\n * @example\n var IExample = new Interface('Example', ['add', 'remove', 'get']);\n var ExampleClass = {\n    add: function(){},\n    remove: function(){},\n    get: function(){}\n  };\n  Interface.ensureImplements(ExampleClass, IExample)\n @param {String} name The name of the interface\n @param {methods} Array The methods the class object must implement\n */\nexport default class Interface{\n\n  constructor(name, methods) {\n\n    if (arguments.length !== 2) {\n      throw new Error(\"Interface constructor called with \" + arguments.length + \"arguments, but expected exactly 2.\");\n    }\n\n    this.name = name;\n    this.methods = [];\n\n      for (var i = 0, len = methods.length; i < len; i++) {\n        if (typeof methods[i] !== 'string') {\n          throw new Error(\"Interface constructor expects method names to be passed in as a string.\");\n        }\n\n        this.methods.push(methods[i]);\n      }\n  }\n\n\n  /**\n   * @description Handle ensuring a object implements the specified interface.\n   * @param {Object} object The objects to verify\n   * @returns {boolean}\n   */\n  static ensureImplements(object) {\n    if (arguments.length < 2) {\n      throw new Error('Function Interface.ensureImplements called with ' + arguments.length +\n      'arguments, but expected at least 2.');\n    }\n\n    for (var i = 1, len = arguments.length; i < len; i++) {\n      var _interface = arguments[i];\n      if (_interface.constructor !== Interface) {\n        throw new Error(\n          'Function Interface.ensureImplements expects arguments two and above to be instances of Interface.');\n      }\n\n      for (var j = 0, methodsLen = _interface.methods.length; j < methodsLen; j++) {\n        var method = _interface.methods[j];\n        if (!object[method] || typeof object[method] !== 'function') {\n          throw new Error('Function Interface.ensureImplements: object does not implement the ' + _interface.name +\n          ' interface. Method ' + method + ' was not found. ');\n        }\n      }\n    }\n    return true;\n  }\n\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Interface",
    "memberof": "js/interface.js",
    "longname": "js/interface.js~Interface",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/interface.js",
    "importStyle": "Interface",
    "description": null,
    "examples": [
      "var IExample = new Interface('Example', ['add', 'remove', 'get']);\nvar ExampleClass = {\n   add: function(){},\n   remove: function(){},\n   get: function(){}\n };\n Interface.ensureImplements(ExampleClass, IExample)"
    ],
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Taken from http://jscriptpatterns.blogspot.com/2013/01/javascript-interfaces.html"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the interface"
      },
      {
        "nullable": null,
        "types": [
          "methods"
        ],
        "spread": false,
        "optional": false,
        "name": "Array",
        "description": "The methods the class object must implement"
      }
    ],
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/interface.js~Interface",
    "longname": "js/interface.js~Interface#constructor",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "methods",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "name",
    "memberof": "js/interface.js~Interface",
    "longname": "js/interface.js~Interface#name",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "methods",
    "memberof": "js/interface.js~Interface",
    "longname": "js/interface.js~Interface#methods",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "ensureImplements",
    "memberof": "js/interface.js~Interface",
    "longname": "js/interface.js~Interface.ensureImplements",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Handle ensuring a object implements the specified interface."
      },
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "object",
        "description": "The objects to verify"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/interfaces.js",
    "memberof": null,
    "longname": "js/interfaces.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "// TODO: All interfaces defined here to ensure modules implement;\nimport Interface from './interface';\n\n/**\n * All interfaces defined here to ensure modules implement;\n * @type {Object}\n */\nconst Interfaces = {};\n\n/**\n * Database interface - All database adapters must implement this interface.\n * @interface IDBInterface\n * @type {Interface}\n */\nInterfaces.IDBInterface = new Interface('IDBInterface', [\n  'getAttachment', 'saveAttachment',\n  'get', 'put', 'post', 'remove',\n  'allDocs', 'bulkDocs', 'changes'\n]);\n/**\n * HTTP interface - All HTTP adapters must implement this interface.\n * @interface IHTTPInterface\n * @type {Interface}\n */\nInterfaces.IHTTPInterface = new Interface('IHTTPInterface', [\n  'get', 'put', 'post', 'delete', 'head', 'request'\n]);\n\nexport default Interfaces;\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "Interfaces",
    "memberof": "js/interfaces.js",
    "longname": "js/interfaces.js~Interfaces",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/interfaces.js",
    "importStyle": "Interfaces",
    "description": "All interfaces defined here to ensure modules implement;",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/log.js",
    "memberof": null,
    "longname": "js/log.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport BaseClass from './base';\nimport dom from './dom';\n\n/**\n * Logger class provides customized logging to the console.\n * pxdb:http GET http://127.0.0.1:5984/default/ +0ms\n * pxdb:api default +28ms id\n * pxdb:api default +1ms id success 9FA8E5B5-FA51-9A95-901E-E6DD8D6D4B90\n */\nexport default class Logger {\n\n  constructor(category = 'log', options = {}) {\n    this.category = category;\n    var defaults = {\n      colors: {\n        trace: 'color:#7672E6;',\n        success: 'color:#288A29;',\n        info: 'color:#1F9A2D;',\n        warn: 'color:#9E9E23;',\n        fatal: 'color:#C057BA;',\n        error: 'color:#FC121E;',\n        debug: 'color:#7672E6;'\n      }\n    };\n    this.options = dom.extend(defaults, options);\n    return this;\n  }\n\n  log(level, args) {\n    let timestamp = new Date().toLocaleString();\n    var log = (window.console) ? window.console.log.bind(window.console) : function() {};\n    log(`[${timestamp}] [${level}] [${this.category}]`, arguments);\n  }\n\n  debug(args) {\n    return this.log('DEBUG', args);\n  }\n\n  info(args) {\n    return this.log('INFO', args);\n  }\n\n  warn(args) {\n    return this.log('WARN', args);\n  }\n\n  error(args) {\n    return this.log('ERROR', args);\n  }\n\n  /**\n   * Log a API method to the console.\n   * @example\n    logger.logApi('someMethod', {}, true);\n    logger.logApi('someMethod', {}, false);\n   * @param {String} method - The name of the method.\n   * @param {Object} params - The params to log.\n   */\n  logApi(method, params, success) {\n    if (!params) {\n      params = {};\n    }\n    console.log('%c[%s:api] %s %o', (success ? this.options.colors.success : this.options.colors.debug), this.category,\n      method, params);\n  }\n\n  /**\n   * Log a API method to the console.\n   * @example\n    logger.logHttp('GET', '/default', true);\n    logger.logHttp('PUT', '/default', false);\n   * @param {String} method - The name of the method.\n   * @param {Object} params - The params to log.\n   */\n  logHttp(method, url, success) {\n    console.log('%c[%s:http] %c%s %c%o', (success ? this.options.colors.success : this.options.colors.info), this.category,\n      null, method, null, url);\n  }\n\n  logTime(name) {\n    var start = new Date();\n    return {\n      end: function() {\n        return (new Date().getMilliseconds() - start.getMilliseconds() + 'ms');\n      }\n    };\n  }\n\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Logger",
    "memberof": "js/log.js",
    "longname": "js/log.js~Logger",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/log.js",
    "importStyle": "Logger",
    "description": "Logger class provides customized logging to the console.\npxdb:http GET http://127.0.0.1:5984/default/ +0ms\npxdb:api default +28ms id\npxdb:api default +1ms id success 9FA8E5B5-FA51-9A95-901E-E6DD8D6D4B90",
    "lineNumber": 12,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#constructor",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "params": [
      {
        "name": "category",
        "optional": true,
        "types": [
          "string"
        ],
        "defaultRaw": "log",
        "defaultValue": "log"
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "category",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#category",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#options",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "log",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#log",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "params": [
      {
        "name": "level",
        "types": [
          "*"
        ]
      },
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "debug",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#debug",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "info",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#info",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "warn",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#warn",
    "access": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "error",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#error",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "params": [
      {
        "name": "args",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "logApi",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#logApi",
    "access": null,
    "description": "Log a API method to the console.",
    "examples": [
      "   logger.logApi('someMethod', {}, true);\n   logger.logApi('someMethod', {}, false);"
    ],
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "The name of the method."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "The params to log."
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "logHttp",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#logHttp",
    "access": null,
    "description": "Log a API method to the console.",
    "examples": [
      "   logger.logHttp('GET', '/default', true);\n   logger.logHttp('PUT', '/default', false);"
    ],
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": "The name of the method."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "params",
        "description": "The params to log."
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "logTime",
    "memberof": "js/log.js~Logger",
    "longname": "js/log.js~Logger#logTime",
    "access": null,
    "description": null,
    "lineNumber": 82,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/main.js",
    "memberof": null,
    "longname": "js/main.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n// TODO: Vendor\n//require('../vendor/overthrow/overthrow')\n//require('../vendor/es6-shim')\n//require('../vendor/fetch')\n//require('../vendor/fastclick')\nimport * as utils from './utils';\nimport BaseClass from './base';\nimport Collection from './collection';\nimport App from './app';\nimport Core from './core';\nimport dom from './dom';\nimport DB from './db';\nimport HTTP from './http';\nimport Model from './model';\nimport Router from './router';\nimport SimpleRouter from './simple-router';\nimport Page from './page';\nimport Pages from './pages';\nimport Views from './views';\nimport View from './view';\nimport PubSub from './pubsub';\nimport Interface from './interface';\nimport Interfaces from './interfaces';\nimport Logger from './log';\nimport {\n  $\n}\nfrom './dom';\n\nvar pxMobile = {\n  version: 'es6',\n  utils,\n  $,\n  Logger,\n  BaseClass,\n  App,\n  Core,\n  Collection,\n  dom,\n  DB,\n  HTTP,\n  Model,\n  SimpleRouter,\n  Router,\n  Page,\n  Pages,\n  Views,\n  View,\n  PubSub,\n  Interface,\n  Interfaces\n};\n\n\nwindow.px = window.px || {};\npxMobile.debug = true;\npxMobile.behaviors = {};\n\n\nwindow.px.mobile = pxMobile;\nwindow.pxMobile = pxMobile;\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pxMobile",
    "memberof": "js/main.js",
    "longname": "js/main.js~pxMobile",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/main.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/model.js",
    "memberof": null,
    "longname": "js/model.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport BaseClass from './base';\nimport HTTP from './HTTP';\nimport * as utils from './utils';\nimport Logger from './log';\n\n/**\n * Model class provides event dispatching.\n * @example\n * var model = new Model();\n * @param {String} id - The id of the model.\n * @param {Object} options - Options for the model\n */\nexport default class Model extends BaseClass {\n\n  constructor(id, options) {\n    id = id || utils.uuid();\n    options = options || {};\n\n    super(id, options);\n\n    this.uuid = utils.uuid();\n    this.id = id;\n    this.baseUrl = options.baseUrl || '/default';\n    this.defaults = options.defaults || {};\n    this.idField = options.idField || '_id';\n    this.data = options.data || {};\n    this.data[this.idField] = id;\n    // TODO: Adpater can be http or db\n    this.adapter = options.adapter || HTTP;\n    this.adapter = new this.adapter(id, options);\n\n\n\n    this.log = new Logger(id, {\n      colors: {\n        debug: 'color:blue'\n      }\n    });\n    this.log.logApi('constructor', options);\n  }\n\n  url() {\n    var url = `/${encodeURIComponent(this.get(this.idField))}`;\n    var rev = this.get('_rev');\n    if (rev) {\n      url += '?rev=' + _rev;\n    }\n    return url;\n  }\n\n  has(attribute) {\n    this.log.logApi('has', attribute);\n    return this.data.hasOwnProperty(attribute);\n  }\n\n  get(attribute) {\n    this.log.logApi('has', attribute);\n    return this.data[attribute];\n  }\n\n  set(attributes, force = true) {\n    for (var key in attributes) {\n      if (force) {\n        this.data[key] = attributes[key];\n      }\n      if (this.has(key)) {\n        this.data[key] = attributes[key];\n      }\n    }\n    return this;\n  }\n\n  toJSON() {\n    console.warn('toJSON', this.data);\n    return JSON.stringify(this.data);\n  }\n\n  clone() {\n    return new this.constructor(this.options);\n  }\n\n  parse(resp) {\n    console.warn('parse', resp);\n    if (resp.ok && resp.data._id) {\n      this.utils.extend(this.data, resp.data);\n    }\n    return resp;\n  }\n\n  fetch(options) {\n    console.warn('fetch', options);\n    return this.adapter.get(this.url()).then(this.parse);\n  }\n\n  save(options) {\n    console.warn('save', options);\n    return this.adapter.put(`${this.url()}`, this.data).then(this.parse);\n  }\n\n  destroy(options) {\n    console.warn('destroy', this.data._rev);\n    return this.adapter.delete(`${this.url()}`).then(this.parse);\n  }\n\n  sync(options) {\n    console.warn('sync', options);\n  }\n\n  static extend(obj) {\n    return super.extend(this, obj);\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Model",
    "memberof": "js/model.js",
    "longname": "js/model.js~Model",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/model.js",
    "importStyle": "Model",
    "description": "Model class provides event dispatching.",
    "examples": [
      "var model = new Model();"
    ],
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The id of the model."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options for the model"
      }
    ],
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "uuid",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#uuid",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#id",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "baseUrl",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#baseUrl",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "defaults",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#defaults",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "idField",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#idField",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "data",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#data",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "adapter",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#adapter",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "adapter",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#adapter",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "log",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#log",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "url",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#url",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "has",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#has",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#get",
    "access": null,
    "description": null,
    "lineNumber": 58,
    "undocument": true,
    "params": [
      {
        "name": "attribute",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "set",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#set",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "params": [
      {
        "name": "attributes",
        "types": [
          "*"
        ]
      },
      {
        "name": "force",
        "optional": true,
        "types": [
          "boolean"
        ],
        "defaultRaw": true,
        "defaultValue": "true"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toJSON",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#toJSON",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clone",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#clone",
    "access": null,
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "parse",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#parse",
    "access": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "params": [
      {
        "name": "resp",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "fetch",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#fetch",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "save",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#save",
    "access": null,
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "destroy",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#destroy",
    "access": null,
    "description": null,
    "lineNumber": 102,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "sync",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model#sync",
    "access": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "extend",
    "memberof": "js/model.js~Model",
    "longname": "js/model.js~Model.extend",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/page.js",
    "memberof": null,
    "longname": "js/page.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nimport PubSub from './pubsub';\nimport BaseClass from './base';\n\n/**\n * @description Page class has methods for managing a page.\n */\nexport default class Page extends BaseClass {\n  constructor(name, options) {\n    super(name, options);\n\n\n\n    this.properties = {\n      title: {\n        type: String,\n        value: null\n      },\n      backText: {\n        type: String,\n        value: null\n      },\n      backLink: {\n        type: String,\n        value: null\n      },\n      //Path to remote view that will be loaded\n      href: {\n        type: String,\n        notify: true,\n        value: null,\n        observer: '_tmplChanged'\n      },\n      active: {\n        type: Boolean,\n        value: false\n      },\n      dialog: {\n        type: Boolean,\n        value: false\n      },\n      //with URL query parameters. If your page URL is \"about.html?id=10&count=20&color=blue\"\n      query: {\n        type: Object\n      },\n      context: {\n        type: Object\n      },\n      //View instance that contains this page (if this View was initialized)\n      view: {\n        type: Object\n      },\n      //Page Data object of the previously active page\n      fromPage: {\n        type: Object\n      },\n      route: {\n        type: String\n      },\n      //Contains string URL of just loaded page\n      url: {\n        type: String\n      },\n      //Link to Page HTMLElement\n      container: {\n        type: String\n      }\n    };\n\n    this.utils.addMixin(new PubSub(name), this);\n\n\n    return this;\n  }\n  created() {\n    const logger = new px.mobile.Logger(this.tagName, {\n      colors: {\n        debug: 'color:orange'\n      }\n    });\n    px.mobile.utils.addMixin(logger, this);\n    this.log.logApi('created', this.id);\n    this.emit(`page:${ this.id }:init`, this);\n  }\n  ready() {\n    this.log.logApi('ready', this.id);\n    if (this.dialog) {\n      this.toggleClass('dialog');\n    }\n    this.emit(`page:${ this.id }:ready`, this);\n  }\n  show() {\n    console.warn('INFO', 'show view', this.id);\n    this.toggleClass('current', false, this);\n  }\n  hide() {\n    console.warn('INFO', 'hide view', this.id);\n    this.toggleClass('hidden', true, this);\n  }\n  update() {\n    console.warn('INFO', 'update view', this.id);\n  }\n  currentView() {\n    console.warn('INFO', 'current view', this.id);\n    this.child()[0].toggleClass('current', true, this);\n  }\n  nextView() {\n    console.warn('INFO', 'next view', this.id);\n    this.toggleClass('next', true, this);\n  }\n  previousView() {\n    console.warn('INFO', 'previous view', this.id);\n    this.toggleClass('previous', true, this);\n  }\n  contextChanged(newContext, oldContext) {\n      console.warn('contextChanged', newContext, oldContext);\n    }\n    //I handle loading a page from a url\n  _tmplChanged(newVal, oldVal) {\n    let _this = this,\n      html = '';\n    if (newVal) {\n      console.warn(this.id, 'Load remote html', newVal);\n      this.importHref(newVal, e => {\n        html = e.target.import.body.innerHTML;\n        _this.log.logApi('inject html', _this.id);\n        console.warn('inject px-view html', _this.id);\n        _this.html(html);\n      }, e => {\n        // loading error\n        console.error('Error loading page', e);\n      });\n    }\n  }\n  showMenu() {\n    px.mobile.dom('px-app').toggleClass('show-menu');\n  }\n  open() {\n    if (this.dialog) {\n      this.toggleClass('open');\n    }\n  }\n  close() {\n    if (this.dialog) {\n      this.toggleClass('open');\n    }\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Page",
    "memberof": "js/page.js",
    "longname": "js/page.js~Page",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/page.js",
    "importStyle": "Page",
    "description": null,
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Page class has methods for managing a page."
      }
    ],
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "properties",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#properties",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "created",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#created",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "ready",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#ready",
    "access": null,
    "description": null,
    "lineNumber": 85,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "show",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#show",
    "access": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "hide",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#hide",
    "access": null,
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "update",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#update",
    "access": null,
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "currentView",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#currentView",
    "access": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "nextView",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#nextView",
    "access": null,
    "description": null,
    "lineNumber": 107,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "previousView",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#previousView",
    "access": null,
    "description": null,
    "lineNumber": 111,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "contextChanged",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#contextChanged",
    "access": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [
      {
        "name": "newContext",
        "types": [
          "*"
        ]
      },
      {
        "name": "oldContext",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_tmplChanged",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#_tmplChanged",
    "access": null,
    "description": null,
    "lineNumber": 119,
    "undocument": true,
    "params": [
      {
        "name": "newVal",
        "types": [
          "*"
        ]
      },
      {
        "name": "oldVal",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "showMenu",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#showMenu",
    "access": null,
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "open",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#open",
    "access": null,
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "close",
    "memberof": "js/page.js~Page",
    "longname": "js/page.js~Page#close",
    "access": null,
    "description": null,
    "lineNumber": 143,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/pages.js",
    "memberof": null,
    "longname": "js/pages.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nimport PubSub from './pubsub';\nimport BaseClass from './base';\n\n/**\n * @description Pages class has methods for managing a collection of pages.\n */\nexport default class Pages extends BaseClass {\n  constructor(name, options) {\n    super(name, options);\n    return this;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Pages",
    "memberof": "js/pages.js",
    "longname": "js/pages.js~Pages",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/pages.js",
    "importStyle": "Pages",
    "description": null,
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@description",
        "tagValue": "Pages class has methods for managing a collection of pages."
      }
    ],
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/pages.js~Pages",
    "longname": "js/pages.js~Pages#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/plugins.js",
    "memberof": null,
    "longname": "js/plugins.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/pubsub.js",
    "memberof": null,
    "longname": "js/pubsub.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\nimport BaseClass from './base';\nimport Logger from './log';\nimport dom from './dom';\n\n/**\n *\n */\nexport default class PubSub {\n\n  /**\n   * PubSub class provides event dispatching.\n   * @example\n   * var pubsub = new PubSub('namespace');\n         pubsub.publish('event', {name: value});\n\n   * @param {String} name - The name of the pubsub.\n   * @return {PubSub} Instance of the pubsub.\n   */\n  constructor(name = 'pubsub', options = {}) {\n    //  super(name, options);\n\n    this.log = new Logger(name, {\n      colors: {\n        debug: 'color:orange'\n      }\n    });\n    /**\n     * @type {Object} Storage for topics that can be broadcast or listened to\n     */\n    this.topics = {};\n\n    /**\n     * @type {Number} A topic identifier\n     */\n    this.subUid = -1;\n    return this;\n  }\n\n  start() {\n\n  }\n\n\n\n  /**\n   * Publish or broadcast events of interest with a specific topic name and arguments such as the data to pass along\n   * @example\n   * pubsub.publish('event', {name: 'value'});\n   * @param {String} topic - The event topic name\n   * @return {PubSub}\n   */\n  publish(topic, args) {\n    let topics = this.topics;\n\n    if (!topics[topic]) {\n      return false;\n    }\n\n    var subscribers = topics[topic],\n      len = subscribers ? subscribers.length : 0;\n\n    while (len--) {\n      subscribers[len].func(topic, args);\n    }\n\n    return this;\n  }\n\n  /**\n   * Subscribe to events of interest with a specific topic name and a callback function, to be executed when the topic/event is observed\n   * @example\n   * pubsub.subscribe('event', function(data){\n\n    });\n   * @param {String} topic - The name of the event.\n   * @return {String} A string token\n   */\n  subscribe(topic, fn) {\n    let topics = this.topics;\n\n    if (!topics[topic]) {\n      topics[topic] = [];\n    }\n\n    var token = (++this.subUid).toString();\n\n    this.topics[topic].push({\n      token: token,\n      func: fn\n    });\n    return token;\n  }\n\n  /**\n   * Unsubscribe from a specific topic, based on a tokenized reference to the subscription\n   * @example\n   *\n   * @param {String} token - The event token\n   * @return {PubSub} PubSub instance\n   */\n  unsubscribe(token) {\n    let topics = this.topics;\n    for (var m in topics) {\n      if (topics[m]) {\n        for (var i = 0, j = topics[m].length; i < j; i++) {\n          if (topics[m][i].token === token) {\n            topics[m].splice(i, 1);\n            return token;\n          }\n        }\n      }\n    }\n    return this;\n  }\n\n  static emit(event, data) {\n\n    return dom('*body').trigger(event, data);\n  }\n\n  static on(event, cb) {\n\n\n    return dom('*body').on(event, cb);\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "PubSub",
    "memberof": "js/pubsub.js",
    "longname": "js/pubsub.js~PubSub",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/pubsub.js",
    "importStyle": "PubSub",
    "description": "",
    "lineNumber": 10,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#constructor",
    "access": null,
    "description": "PubSub class provides event dispatching.",
    "examples": [
      "var pubsub = new PubSub('namespace');\n        pubsub.publish('event', {name: value});"
    ],
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the pubsub."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PubSub"
      ],
      "spread": false,
      "description": "Instance of the pubsub."
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "log",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#log",
    "access": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "topics",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#topics",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "subUid",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#subUid",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#start",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "publish",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#publish",
    "access": null,
    "description": "Publish or broadcast events of interest with a specific topic name and arguments such as the data to pass along",
    "examples": [
      "pubsub.publish('event', {name: 'value'});"
    ],
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "The event topic name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PubSub"
      ],
      "spread": false,
      "description": ""
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "subscribe",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#subscribe",
    "access": null,
    "description": "Subscribe to events of interest with a specific topic name and a callback function, to be executed when the topic/event is observed",
    "examples": [
      "pubsub.subscribe('event', function(data){\n   });"
    ],
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": "The name of the event."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "A string token"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "unsubscribe",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub#unsubscribe",
    "access": null,
    "description": "Unsubscribe from a specific topic, based on a tokenized reference to the subscription",
    "examples": [
      ""
    ],
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "token",
        "description": "The event token"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PubSub"
      ],
      "spread": false,
      "description": "PubSub instance"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "emit",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub.emit",
    "access": null,
    "description": null,
    "lineNumber": 118,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "on",
    "memberof": "js/pubsub.js~PubSub",
    "longname": "js/pubsub.js~PubSub.on",
    "access": null,
    "description": null,
    "lineNumber": 123,
    "undocument": true,
    "params": [
      {
        "name": "event",
        "types": [
          "*"
        ]
      },
      {
        "name": "cb",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/router.js",
    "memberof": null,
    "longname": "js/router.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\nimport PubSub from './pubsub';\nimport BaseClass from './base';\n\n//regex for stripping a leading hash/slash and trailing space.\nvar routeStripper = /^[#\\/]|\\s+$/g;\n\n//regex for stripping leading and trailing slashes.\nvar rootStripper = /^\\/+|\\/+$/g;\n\n// regex for stripping urls of hash.\nvar pathStripper = /#.*$/;\n\n/**\n * Router history manages the state of the router.\n * Handles cross-browser history management, based on either pushState and real URLs, or onhashchange and URL fragments.\n * Inspired by http://backbonejs.org/docs/backbone.html#section-196\n */\nexport class RouterHistory extends BaseClass {\n\n  constructor(name, options = {\n    root: '/'\n  }) {\n    super(name, options);\n\n    this.root = ('/' + this.root + '/').replace(rootStripper, '#/');\n\n    if (typeof window !== 'undefined') {\n      this.location = window.location;\n      this.history = window.history;\n    }\n    this.pushState = options.pushState || false;\n    return this;\n  }\n\n  go(route, options) {\n      if (this.pushState) {\n        this.history.pushState(options, document.title, route);\n      } else {\n        this.location.hash = route;\n      }\n\n    }\n    /**\n     *\n     */\n  state() {\n      return this.history.state;\n    }\n    /**\n     *\n     */\n  back() {\n    return this.history.back();\n  }\n\n  /**\n   *\n   */\n  forward() {\n    return this.history.forward();\n  }\n\n  atRoot() {\n    var path = this.location.pathname.replace(/[^\\/]$/, '$&/');\n    return path === this.root && !this.getSearch();\n  }\n\n  matchRoot() {\n    var path = this.decodeFragment(this.location.pathname);\n    var root = path.slice(0, this.root.length - 1) + '/';\n    return root === this.root;\n  }\n\n  decodeFragment(fragment) {\n    return decodeURI(fragment.replace(/%25/g, '%2525'));\n  }\n\n  /**\n   *\n   */\n  getSearch() {\n    var match = this.location.href.replace(/#.*/, '').match(/\\?.+/);\n    return match ? match[0] : '';\n  }\n\n  /**\n   * Gets the true hash value.\n   */\n  getHash(window) {\n    var match = (window || this).location.href.match(/#(.*)$/);\n    return match ? match[1] : '';\n  }\n\n  /**\n   * Get the pathname and search params, without the root.\n   */\n  getPath() {\n      var path = this.decodeFragment(this.location.pathname + this.getSearch()).slice(this.root.length - 1);\n      return path.charAt(0) === '/' ? path.slice(1) : path;\n    }\n    /**\n     * Get the browser normailzed URL fragment form the path or hash.\n     */\n  getFragment(fragment) {\n    if (fragment === null) {\n      if (this._usePushState || !this._wantsHashChange) {\n        fragment = this.getPath();\n      } else {\n        fragment = this.getHash();\n      }\n    } else {\n      fragment = this.getHash();\n    }\n    return fragment.replace(routeStripper, '');\n  }\n}\n\n/**\n *\n */\nRouterHistory.started = false;\n\n\nlet _instance = null;\nlet optionalParam = /\\((.*?)\\)/g;\nlet namedParam = /(\\(\\?)?:\\w+/g;\nlet splatParam = /\\*\\w+/g;\nlet escapeRegExp = /[\\-{}\\[\\]+?.,\\\\\\^$|#\\s]/g;\n\n\n\n/**\n * This is the Router class that handles simple routing.\n * @example\n * var myRouter = new px.mobile.Router('app', {\n *  routes: {\n * '/': routeHandlers.homeRoute,\n *     '/about': routeHandlers.aboutRoute,\n *     '/users': routeHandlers.listRoute,\n *     '/users/:action/:id': routeHandlers.detailRoute\n *   }\n * });\n\n \"route:[name]\" (params) — Fired by the router when a specific route is matched.\n \"route\" (route, params) — Fired by the router when any route has been matched.\n \"route\" (router, route, params) — Fired by history when any route has been matched.\n */\nexport default class Router extends BaseClass {\n\n\n  /**\n   * Return the ServiceLocator _instance.\n   * @return the _instance.\n   */\n  static getInstance() {\n    if (_instance == null) {\n      _instance = new Router();\n    }\n\n    return _instance;\n  }\n\n\n  /**\n   * This is the Router class constructor\n   * @constructor\n   * @param {String} name - The name of the router\n   * @param {Object} options - The options for the router\n   */\n  constructor(name, options) {\n    name = name + '.Router';\n    super(name, options);\n\n    /**\n     * @type {RouterHistory}\n     */\n    this.history = new RouterHistory();\n\n    /**\n     * @type {Object} Initial routes\n     */\n    this.routes = {\n      '/': ''\n    };\n\n    this.urlPrefix = '#';\n    this.mixin(options);\n    this.started = false;\n    this._setRegexRoutes();\n\n    return this;\n  }\n  listen() {\n    var self = this;\n    var current = this.history.getFragment();\n    var fn = function() {\n      if (current !== self.history.getFragment()) {\n        current = self.history.getFragment();\n        self.check(current);\n      }\n    };\n    clearInterval(this.interval);\n    this.interval = setInterval(fn, 50);\n    return this;\n  }\n  check(f) {\n    var fragment = f || this.history.getFragment();\n\n    for (var i = 0; i < this.routesRegex.length; i++) {\n      var match = fragment.match(this.routesRegex[i].regexp);\n      if (match) {\n        match.shift();\n        this.routesRegex[i].success.apply({}, match);\n        return this;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Handle starting the router and setting up listeners.\n   */\n  start() {\n    this.log.logApi('2. start', this);\n    if ('onhashchange' in window) {\n      this.log.logApi('3. onhashchange', 'The browser supports the hashchange event!');\n      this.started = true;\n      window.addEventListener('hashchange', (e) => {\n        this._handleRoute(e);\n      }, this);\n\n    } else {\n      console.error('Hashchange not availble');\n    }\n    return this;\n  }\n\n  /**\n   * Execute a route handler with the provided parameters.\n   * @param {Function} callback - The callback function to invoke\n   * @param {*} args - The arguments to pass to the callback\n   * @param {String} name - The name of the route\n   */\n  execute(callback, args, name) {\n    //PubSub.emit(name, args);\n    this.log.logApi('execute =>' + name, args);\n    if (callback) {\n      callback.apply(this, args);\n    }\n    return this;\n  }\n\n\n  /**\n   * Navigate to a route passing options\n   * @example\n   * myRouter.navigate('/login');\n   * @param {String} route - The route to Navigate to\n   * @param {Object} options - The options to pass to the route handler\n   */\n  navigate(route, options) {\n    this.log.logApi('navigate =>' + route, options);\n    /*\n    PubSub.emit('route:before', {\n      route, options\n    });\n*/\n    this.history.go(route, options);\n\n    return this;\n  }\n\n  /**\n   * Trigger callback when route is found\n   * @example\n   myRouter.on('/users/:action/:id', function(req, res) {\n     expect(req).toBeDefined();\n     expect(res).toBeDefined();\n     expect(req.url).toBe(window.location.origin + '/users/edit/99');\n     expect(req.pathname).toBe('/users/edit/99');\n     expect(req.params.action).toBe('edit');\n     expect(req.params.id).toBe('99');\n   });\n\n   myRouter.navigate('/users/edit/99', {\n     data: testObj\n   });\n   * @param {String} route - The route to watch\n   * @param {Function} options - The route options\n   */\n  on(route, options) {\n    this.subscribe(route, options);\n    this.log.logApi('5. on -' + route, options);\n    this.routes[route] = options;\n    this._setRegexRoutes();\n    return this;\n  }\n\n  /**\n   * Promise based route handler, use this to add routes that resolve a promise when matched.\n   * @param {String} route - The route to match.\n   * @return {Promise} A promise that is resolved when matched.\n   */\n  when(route) {\n    this.log.logApi('4. when', route);\n    var _this = this;\n    return new Promise(function(resolve, reject) {\n      _this.on(route, {\n        callback: function(req, res) {\n          resolve(req, res);\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Manually bind a single named route to a callback. For example:\n   *\n   * // Matches #page/10, passing \"10\"\n   * this.route(\"page/:number\", \"page\", function(number){ ... });\n   *\n   * // Matches /117-a/b/c/open, passing \"117-a/b/c\" to this.open\n   * this.route(/^(.*?)\\/open$/, \"open\");\n   */\n  route(route, name, callback) {\n    this.log.logApi('route', route);\n    return this;\n  }\n\n  /**\n   * I handle the routing when the location.hash changes.\n   */\n  _handleRoute(e) {\n    this.log.logApi('_handleRoute', e);\n    var _hash = location.hash.replace(/^#\\/|\\/$/gi, '/');\n    var parser = document.createElement('a');\n    parser.href = _hash;\n    var _routeObj = null;\n    var res = {};\n    var req = {\n      hostname: parser.hostname,\n      host: parser.host,\n      port: parser.port,\n      protocol: parser.protocol,\n      pathname: parser.pathname,\n      hash: parser.hash,\n      url: parser.href,\n      query: parser.search,\n      params: {}, //needs to be routes named params keys and value the values\n      data: {} //Needs to be any other data sent along\n    };\n\n    req.query = this._getUrlQuery(parser.href);\n\n    //Loop each regex route and match against hash, if match, invoke route handler function.\n    for (var i = 0; i < this.routesRegex.length; i++) {\n      _routeObj = this.routesRegex[i];\n\n      //Test if route matches registered route\n      if (_routeObj.regexp.test(_hash)) {\n        _routeObj.current = _hash;\n\n        _routeObj = this._setRouteParams(_routeObj);\n\n        //setup request params / and data\n        req.params = _routeObj.params;\n\n        //Log\n        this.log.logApi(_hash, _routeObj);\n        /*\n         PubSub.emit('route:success', {\n           _routeObj, req, res\n         });\n         PubSub.emit('route:change', {\n           _routeObj, req, res\n         });\n         */\n        //Execute route handler\n        this.execute(_routeObj.success, [req, res], _hash);\n      } else {\n\n        this.execute(_routeObj.error, [req, res], _hash);\n      }\n    }\n  }\n\n  /**\n   * I handle building the regular expressions from the route patterns.\n   */\n  _setRegexRoutes() {\n    var _out = [],\n      _routeParams = [],\n      _reg, _routeObj;\n\n    var routeHandler = null;\n    var routeErrorHandler = function() {};\n    var routeSuccessHandler = function() {};\n    var routeResolver = null;\n\n    this.log.logApi('1. registerRoutes', this.routes);\n    for (var _route in this.routes) {\n\n\n      // TODO: Route handler can be a function or object\n      if (this.utils.type(this.routes[_route]) === 'function') {\n        routeSuccessHandler = this.routes[_route];\n      }\n\n      // TODO:  If object, make sure callback prop exists,\n      if (this.utils.type(this.routes[_route]) === 'object') {\n\n        if (this.routes[_route].error) {\n          routeErrorHandler.bind(this.routes[_route].error);\n        }\n        if (this.routes[_route].success) {\n          routeSuccessHandler.bind(this.routes[_route].success);\n        }\n\n\n\n        console.warn('Found route callback');\n\n        if (this.routes[_route].resolve) {\n          routeSuccessHandler = this.routes[_route].resolve;\n          console.warn('Found route resolver');\n        }\n      }\n\n      // TODO: if object.resolve (Ensure objects key is added to params once resolved.)\n      _routeParams = _route.replace('/', '').split('/');\n      _reg = this._regexRoute(_route, _routeParams);\n      _routeObj = {\n        regexp: _reg,\n        route: _route,\n        success: routeSuccessHandler,\n        error: routeErrorHandler\n      };\n      _out.push(_routeObj);\n      //this.log.logApi('setRegexRoutes', _routeObj);\n    }\n    this.routesRegex = _out;\n    return _out;\n  }\n\n  /**\n   * I handle taking a regex route pattern and the route and returning the matches key:value pair object.\n   * @param {Object} routeObj - The route object to set\n   * @return {Object} A route object map of name/value pairs\n   */\n  _setRouteParams(routeObj) {\n    var normalized = routeObj.route.replace(/\\:/g, '');\n    var m1 = routeObj.regexp.exec(normalized);\n    var m2 = routeObj.regexp.exec(routeObj.current);\n    var params = {};\n    for (var i = 1; i < m1.length; i++) {\n      params[m1[i]] = m2[i];\n    }\n    routeObj.params = params;\n    return routeObj;\n  }\n\n  /**\n   * I handle parsing a url string and returning the query object.\n   * @param {String} url - The url to parse\n   * @return {Object} A object map of name/value pairs\n   */\n  _getUrlQuery(url) {\n    var re = /(?:\\?|&(?:amp;)?)([^=&#]+)(?:=?([^&#]*))/g,\n      match,\n      params = {};\n\n    if (typeof url === 'undefined') {\n      url = window.location.href;\n    }\n    var decode = function(s) {\n      return decodeURIComponent(s.replace(/\\+/g, ' '));\n    };\n    while (match = re.exec(url)) {\n      params[decode(match[1])] = decode(match[2]);\n    }\n\n    this.log.logApi('getUrlQuery', url);\n    return params;\n  }\n\n  /**\n   * Create a RegExp Route from a string. Taken from https://github.com/EngineeringMode/Grapnel.js/blob/master/src/grapnel.js#L49\n   * @example\n    var router = new px.mobile.Router()\n        router._regexRoute('/users/:action/:id', [':action', ':id']);\n        => /^\\/users\\/(?:([^\\/]+?))\\/(?:([^\\/]+?))\\/?$/i\n\n   * @param {String} path - Path of route\n   * @param {Array} keys - Array of keys to fill\n   * @param {Bool} sensitive - Case sensitive comparison\n   * @param {Bool} strict - Strict mode\n   * @return {RegExp} A new regular expression\n   */\n  _regexRoute(path, keys, sensitive, strict) {\n    if (path instanceof RegExp) {\n      return path;\n    }\n    if (path instanceof Array) {\n      path = '(' + path.join('|') + ')';\n    }\n    path = path.concat(strict ? '' : '/?')\n      .replace(/\\/\\(/g, '(?:/')\n      .replace(/\\+/g, '__plus__')\n      .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function(_, slash, format, key, capture, optional) {\n        keys.push({\n          name: key,\n          optional: !!optional\n        });\n        slash = slash || '';\n        return '' + (optional ? '' : slash) + '(?:' + (optional ? slash : '') + (format || '') + (capture || (\n          format && '([^/.]+?)' || '([^/]+?)')) + ')' + (optional || '');\n      })\n      .replace(/([\\/.])/g, '\\\\$1')\n      .replace(/__plus__/g, '(.+)')\n      .replace(/\\*/g, '(.*)');\n\n    return new RegExp('^' + path + '$', sensitive ? '' : 'i');\n  }\n\n\n\n  // TODO:\n  /*\n\n  // Set pages classess for animationEnd\n     animatePages: function (leftPage, rightPage, direction, view) {\n         // Loading new page\n         var removeClasses = 'page-on-center page-on-right page-on-left';\n         if (direction === 'to-left') {\n             leftPage.removeClass(removeClasses).addClass('page-from-center-to-left');\n             rightPage.removeClass(removeClasses).addClass('page-from-right-to-center');\n         }\n         // Go back\n         if (direction === 'to-right') {\n             leftPage.removeClass(removeClasses).addClass('page-from-left-to-center');\n             rightPage.removeClass(removeClasses).addClass('page-from-center-to-right');\n\n         }\n     },\n\n  */\n\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "routeStripper",
    "memberof": "js/router.js",
    "longname": "js/router.js~routeStripper",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "rootStripper",
    "memberof": "js/router.js",
    "longname": "js/router.js~rootStripper",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "pathStripper",
    "memberof": "js/router.js",
    "longname": "js/router.js~pathStripper",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "RouterHistory",
    "memberof": "js/router.js",
    "longname": "js/router.js~RouterHistory",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/router.js",
    "importStyle": "{RouterHistory}",
    "description": "Router history manages the state of the router.\nHandles cross-browser history management, based on either pushState and real URLs, or onhashchange and URL fragments.\nInspired by http://backbonejs.org/docs/backbone.html#section-196",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#constructor",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "optional": true,
        "types": [
          "{\"root\": string}"
        ],
        "defaultRaw": {
          "root": "/"
        },
        "defaultValue": "{\"root\":\"/\"}"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#root",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "location",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#location",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "history",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#history",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "pushState",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#pushState",
    "access": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "go",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#go",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      },
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "state",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#state",
    "access": null,
    "description": "",
    "lineNumber": 47,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "back",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#back",
    "access": null,
    "description": "",
    "lineNumber": 53,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "forward",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#forward",
    "access": null,
    "description": "",
    "lineNumber": 60,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "atRoot",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#atRoot",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "matchRoot",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#matchRoot",
    "access": null,
    "description": null,
    "lineNumber": 69,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "decodeFragment",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#decodeFragment",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "params": [
      {
        "name": "fragment",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSearch",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#getSearch",
    "access": null,
    "description": "",
    "lineNumber": 82,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getHash",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#getHash",
    "access": null,
    "description": "Gets the true hash value.",
    "lineNumber": 90,
    "params": [
      {
        "name": "window",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getPath",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#getPath",
    "access": null,
    "description": "Get the pathname and search params, without the root.",
    "lineNumber": 98,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getFragment",
    "memberof": "js/router.js~RouterHistory",
    "longname": "js/router.js~RouterHistory#getFragment",
    "access": null,
    "description": "Get the browser normailzed URL fragment form the path or hash.",
    "lineNumber": 105,
    "params": [
      {
        "name": "fragment",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_instance",
    "memberof": "js/router.js",
    "longname": "js/router.js~_instance",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "optionalParam",
    "memberof": "js/router.js",
    "longname": "js/router.js~optionalParam",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "namedParam",
    "memberof": "js/router.js",
    "longname": "js/router.js~namedParam",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "splatParam",
    "memberof": "js/router.js",
    "longname": "js/router.js~splatParam",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "escapeRegExp",
    "memberof": "js/router.js",
    "longname": "js/router.js~escapeRegExp",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/router.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 129,
    "undocument": true,
    "type": {
      "types": [
        "object"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Router",
    "memberof": "js/router.js",
    "longname": "js/router.js~Router",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/router.js",
    "importStyle": "Router",
    "description": "This is the Router class that handles simple routing.",
    "examples": [
      "var myRouter = new px.mobile.Router('app', {\n routes: {\n'/': routeHandlers.homeRoute,\n    '/about': routeHandlers.aboutRoute,\n    '/users': routeHandlers.listRoute,\n    '/users/:action/:id': routeHandlers.detailRoute\n  }\n});\n\"route:[name]\" (params) — Fired by the router when a specific route is matched.\n\"route\" (route, params) — Fired by the router when any route has been matched.\n\"route\" (router, route, params) — Fired by history when any route has been matched."
    ],
    "lineNumber": 149,
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getInstance",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router.getInstance",
    "access": null,
    "description": "Return the ServiceLocator _instance.",
    "lineNumber": 156,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "the _instance."
    },
    "generator": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#constructor",
    "access": null,
    "description": "This is the Router class constructor",
    "lineNumber": 171,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the router"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options for the router"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "history",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#history",
    "access": null,
    "description": null,
    "lineNumber": 178,
    "type": {
      "nullable": null,
      "types": [
        "RouterHistory"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routes",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#routes",
    "access": null,
    "description": null,
    "lineNumber": 183,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "urlPrefix",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#urlPrefix",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#started",
    "access": null,
    "description": null,
    "lineNumber": 189,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listen",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#listen",
    "access": null,
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#interval",
    "access": null,
    "description": null,
    "lineNumber": 204,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "check",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#check",
    "access": null,
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#start",
    "access": null,
    "description": "Handle starting the router and setting up listeners.",
    "lineNumber": 224,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "started",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#started",
    "access": null,
    "description": null,
    "lineNumber": 228,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "execute",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#execute",
    "access": null,
    "description": "Execute a route handler with the provided parameters.",
    "lineNumber": 245,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": "The callback function to invoke"
      },
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The arguments to pass to the callback"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the route"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "navigate",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#navigate",
    "access": null,
    "description": "Navigate to a route passing options",
    "examples": [
      "myRouter.navigate('/login');"
    ],
    "lineNumber": 262,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "The route to Navigate to"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to pass to the route handler"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "on",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#on",
    "access": null,
    "description": "Trigger callback when route is found",
    "examples": [
      "  myRouter.on('/users/:action/:id', function(req, res) {\n    expect(req).toBeDefined();\n    expect(res).toBeDefined();\n    expect(req.url).toBe(window.location.origin + '/users/edit/99');\n    expect(req.pathname).toBe('/users/edit/99');\n    expect(req.params.action).toBe('edit');\n    expect(req.params.id).toBe('99');\n  });\n  myRouter.navigate('/users/edit/99', {\n    data: testObj\n  });"
    ],
    "lineNumber": 292,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "The route to watch"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The route options"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "when",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#when",
    "access": null,
    "description": "Promise based route handler, use this to add routes that resolve a promise when matched.",
    "lineNumber": 305,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "route",
        "description": "The route to match."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "A promise that is resolved when matched."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "route",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#route",
    "access": null,
    "description": "Manually bind a single named route to a callback. For example:\n\n// Matches #page/10, passing \"10\"\nthis.route(\"page/:number\", \"page\", function(number){ ... });\n\n// Matches /117-a/b/c/open, passing \"117-a/b/c\" to this.open\nthis.route(/^(.*?)\\/open$/, \"open\");",
    "lineNumber": 327,
    "params": [
      {
        "name": "route",
        "types": [
          "*"
        ]
      },
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_handleRoute",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#_handleRoute",
    "access": null,
    "description": "I handle the routing when the location.hash changes.",
    "lineNumber": 335,
    "params": [
      {
        "name": "e",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setRegexRoutes",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#_setRegexRoutes",
    "access": null,
    "description": "I handle building the regular expressions from the route patterns.",
    "lineNumber": 392,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routesRegex",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#routesRegex",
    "access": null,
    "description": null,
    "lineNumber": 443,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_setRouteParams",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#_setRouteParams",
    "access": null,
    "description": "I handle taking a regex route pattern and the route and returning the matches key:value pair object.",
    "lineNumber": 452,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "routeObj",
        "description": "The route object to set"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A route object map of name/value pairs"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_getUrlQuery",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#_getUrlQuery",
    "access": null,
    "description": "I handle parsing a url string and returning the query object.",
    "lineNumber": 469,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "The url to parse"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "A object map of name/value pairs"
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "_regexRoute",
    "memberof": "js/router.js~Router",
    "longname": "js/router.js~Router#_regexRoute",
    "access": null,
    "description": "Create a RegExp Route from a string. Taken from https://github.com/EngineeringMode/Grapnel.js/blob/master/src/grapnel.js#L49",
    "examples": [
      "   var router = new px.mobile.Router()\n       router._regexRoute('/users/:action/:id', [':action', ':id']);\n       => /^\\/users\\/(?:([^\\/]+?))\\/(?:([^\\/]+?))\\/?$/i"
    ],
    "lineNumber": 501,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "Path of route"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "keys",
        "description": "Array of keys to fill"
      },
      {
        "nullable": null,
        "types": [
          "Bool"
        ],
        "spread": false,
        "optional": false,
        "name": "sensitive",
        "description": "Case sensitive comparison"
      },
      {
        "nullable": null,
        "types": [
          "Bool"
        ],
        "spread": false,
        "optional": false,
        "name": "strict",
        "description": "Strict mode"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": "A new regular expression"
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/service-locator.js",
    "memberof": null,
    "longname": "js/service-locator.js",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "content": "// TODO: Service Location\n/**\n * A simple Service Locator that handles regisering services and resolving services.\n * @example\n var app = new px.mobile.App();\n\n app.register('router', new px.mobile.Router('default', {\n   routes: {\n     '/users': {\n       callback: function(req, res) {\n         console.warn('route callback', req, res);\n       },\n       resolve: {\n         users: function() {\n           return new Promise(function(resolve, reject) {\n             setTimeout(function() {\n               resolve({});\n             }, 5000);\n           });\n         }\n       }\n     }\n   }\n }));\n */\nlet _instance = null;\nlet _services = {};\nexport default class ServiceLocator {\n  constructor(options) {\n    this.services = _services;\n    this.options = options || {};\n    return this;\n  }\n  register(key, service) {\n    _services[key] = service;\n    return this;\n  }\n  resolve(key) {\n    return _services[key];\n  }\n\n  /**\n   * I start a service by calling the start() method on the service.\n   */\n  start(key) {\n    var service = _services[key];\n    console.warn('Starting service', key, service);\n    return service.start();\n  }\n\n  startAll() {\n    var all = [];\n    console.warn('startAll', _services);\n    for (var service in _services) {\n      console.warn('Starting service', service);\n      all.push(this.start(service));\n    }\n    return all;\n  }\n\n  reset() {\n    _services = {};\n    return this;\n  }\n\n  /**\n   * Return the ServiceLocator _instance.\n   * @return the _instance.\n   */\n  static getInstance() {\n    if (_instance == null) {\n      _instance = new ServiceLocator();\n    }\n    return _instance;\n  }\n}\n"
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_instance",
    "memberof": "js/service-locator.js",
    "longname": "js/service-locator.js~_instance",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/service-locator.js",
    "importStyle": null,
    "description": "A simple Service Locator that handles regisering services and resolving services.",
    "examples": [
      "var app = new px.mobile.App();\napp.register('router', new px.mobile.Router('default', {\n  routes: {\n    '/users': {\n      callback: function(req, res) {\n        console.warn('route callback', req, res);\n      },\n      resolve: {\n        users: function() {\n          return new Promise(function(resolve, reject) {\n            setTimeout(function() {\n              resolve({});\n            }, 5000);\n          });\n        }\n      }\n    }\n  }\n}));"
    ],
    "lineNumber": 26,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "_services",
    "memberof": "js/service-locator.js",
    "longname": "js/service-locator.js~_services",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/service-locator.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "ServiceLocator",
    "memberof": "js/service-locator.js",
    "longname": "js/service-locator.js~ServiceLocator",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/service-locator.js",
    "importStyle": "ServiceLocator",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#constructor",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "services",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#services",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "options",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#options",
    "access": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "register",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#register",
    "access": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "service",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "resolve",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#resolve",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "start",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#start",
    "access": null,
    "description": "I start a service by calling the start() method on the service.",
    "lineNumber": 45,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "startAll",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#startAll",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "reset",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator#reset",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "getInstance",
    "memberof": "js/service-locator.js~ServiceLocator",
    "longname": "js/service-locator.js~ServiceLocator.getInstance",
    "access": null,
    "description": "Return the ServiceLocator _instance.",
    "lineNumber": 70,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "the _instance."
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/simple-router.js",
    "memberof": null,
    "longname": "js/simple-router.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import BaseClass from './base';\n// TODO: Experiment\n\n/**\n * Simple Router Experiment\n * @example\n // configuration\nRouter.config({ mode: 'history'});\n\n// returning the user to the initial state\nRouter.navigate();\n\n// adding routes\nRouter\n.add(/about/, function() {\n    console.log('about');\n})\n.add(/products\\/(.*)\\/edit\\/(.*)/, function() {\n    console.log('products', arguments);\n})\n.add(function() {\n    console.log('default');\n})\n.check('/products/12/edit/22').listen();\n\n// forwarding\nRouter.navigate('/about');\n */\nexport default class SimpleRouter extends BaseClass {\n\n  /**\n   * This is the Router class constructor\n   * @constructor\n   * @param {String} name - The name of the router\n   * @param {Object} options - The options for the router\n   */\n  constructor(name, options) {\n    name = name + '.Router';\n    super(name, options);\n\n    this.routes = [];\n\n    this.routeMap = new Map();\n\n    //Could be 'hash' or 'history' showing if we use the History API or not\n    this.mode = options.hash || 'hash';\n\n    //the root URL path of the application. It is needed only if we use pushState.\n    this.root = options.root || '/';\n\n    this.urlPrefix = options.urlPrefix || '!#!';\n\n    this.mixin(options);\n\n    this.config(options);\n\n    return this;\n  }\n\n\n  config(options) {\n    this.mode = options && options.mode && options.mode === 'history' && !!(history.pushState) ? 'history' : 'hash';\n    this.root = options && options.root ? '/' + this.clearSlashes(options.root) + '/' : '/';\n    return this;\n  }\n\n  /**\n   * Remove the slashes from the beginning and from the end of the string.\n   */\n  clearSlashes(path) {\n    return path.toString().replace(/\\/$/, '').replace(/^\\//, '');\n  }\n\n  getFragment() {\n    var fragment = '';\n    if (this.mode === 'history') {\n      fragment = this.clearSlashes(decodeURI(location.pathname + location.search));\n      fragment = fragment.replace(/\\?(.*)$/, '');\n      fragment = this.root !== '/' ? fragment.replace(this.root, '') : fragment;\n    } else {\n      var match = window.location.href.match(/#(.*)$/);\n      fragment = match ? match[1] : '';\n    }\n    return this.clearSlashes(fragment);\n  }\n\n  /**\n   * Handle adding a route to the Router.\n   * @example\n   * //Code\n   * @param {RegExp} re - Regular expression to match route against.\n   * @param {Function} handler - Callback function to invoke when route matches.\n   * @return {SimpleRouter} Returns instance of the router.\n   */\n  add(re, handler) {\n      if (typeof re === 'function') {\n        handler = re;\n        re = '';\n      }\n      this.routes.push({\n        re: re,\n        handler: handler\n      });\n      return this;\n    }\n    /**\n     * Handle removing a param from the handler\n     * @example\n     * //Code\n     */\n  remove(param) {\n      for (var i = 0, r; i < this.routes.length, r = this.routes[i]; i++) {\n        if (r.handler === param || r.re.toString() === param.toString()) {\n          this.routes.splice(i, 1);\n          return this;\n        }\n      }\n      return this;\n    }\n    /**\n     * Handle flusing all the routes.\n     * @example\n     * //Code\n     */\n  flush() {\n    this.routes = [];\n    this.mode = null;\n    this.root = '/';\n    return this;\n  }\n\n  /**\n   * Handle invoking a route which triggers the callback handler.\n   * @example\n   * //Code\n   */\n  check(f) {\n    var fragment = f || this.getFragment();\n    for (var i = 0; i < this.routes.length; i++) {\n      var match = fragment.match(this.routes[i].re);\n      if (match) {\n        match.shift();\n        this.routes[i].handler.apply({}, match);\n        return this;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Handle starting the route which then listens for changes.\n   * @example\n   * //Code\n   */\n  listen() {\n    var self = this;\n    var current = self.getFragment();\n    var fn = function() {\n      if (current !== self.getFragment()) {\n        current = self.getFragment();\n        self.check(current);\n        console.warn('Checking route', current);\n      }\n    };\n    clearInterval(this.interval);\n    this.interval = setInterval(fn, 50);\n    return this;\n  }\n\n  /**\n   * Handle changing the current routes location.\n   * @example\n   * //Code\n   */\n  navigate(path) {\n    path = path ? path : '';\n    if (this.mode === 'history') {\n      history.pushState(null, null, this.root + this.clearSlashes(path));\n    } else {\n      window.location.href.match(/#(.*)$/);\n      window.location.href = window.location.href.replace(/#(.*)$/, '') + '#' + path;\n    }\n    return this;\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "SimpleRouter",
    "memberof": "js/simple-router.js",
    "longname": "js/simple-router.js~SimpleRouter",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/simple-router.js",
    "importStyle": "SimpleRouter",
    "description": "Simple Router Experiment",
    "examples": [
      "// configuration\nRouter.config({ mode: 'history'});\n// returning the user to the initial state\nRouter.navigate();\n// adding routes\nRouter\n.add(/about/, function() {\n   console.log('about');\n})\n.add(/products\\/(.*)\\/edit\\/(.*)/, function() {\n   console.log('products', arguments);\n})\n.add(function() {\n   console.log('default');\n})\n.check('/products/12/edit/22').listen();\n// forwarding\nRouter.navigate('/about');"
    ],
    "lineNumber": 29,
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#constructor",
    "access": null,
    "description": "This is the Router class constructor",
    "lineNumber": 37,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the router"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options for the router"
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routes",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#routes",
    "access": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routeMap",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#routeMap",
    "access": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mode",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#mode",
    "access": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#root",
    "access": null,
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "urlPrefix",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#urlPrefix",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "config",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#config",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mode",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#mode",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#root",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "clearSlashes",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#clearSlashes",
    "access": null,
    "description": "Remove the slashes from the beginning and from the end of the string.",
    "lineNumber": 70,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getFragment",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#getFragment",
    "access": null,
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#add",
    "access": null,
    "description": "Handle adding a route to the Router.",
    "examples": [
      "//Code"
    ],
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "RegExp"
        ],
        "spread": false,
        "optional": false,
        "name": "re",
        "description": "Regular expression to match route against."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Callback function to invoke when route matches."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SimpleRouter"
      ],
      "spread": false,
      "description": "Returns instance of the router."
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "remove",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#remove",
    "access": null,
    "description": "Handle removing a param from the handler",
    "examples": [
      "//Code"
    ],
    "lineNumber": 111,
    "params": [
      {
        "name": "param",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "flush",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#flush",
    "access": null,
    "description": "Handle flusing all the routes.",
    "examples": [
      "//Code"
    ],
    "lineNumber": 125,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "routes",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#routes",
    "access": null,
    "description": null,
    "lineNumber": 126,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "mode",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#mode",
    "access": null,
    "description": null,
    "lineNumber": 127,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "root",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#root",
    "access": null,
    "description": null,
    "lineNumber": 128,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "check",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#check",
    "access": null,
    "description": "Handle invoking a route which triggers the callback handler.",
    "examples": [
      "//Code"
    ],
    "lineNumber": 137,
    "params": [
      {
        "name": "f",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "listen",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#listen",
    "access": null,
    "description": "Handle starting the route which then listens for changes.",
    "examples": [
      "//Code"
    ],
    "lineNumber": 155,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "interval",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#interval",
    "access": null,
    "description": null,
    "lineNumber": 166,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "navigate",
    "memberof": "js/simple-router.js~SimpleRouter",
    "longname": "js/simple-router.js~SimpleRouter#navigate",
    "access": null,
    "description": "Handle changing the current routes location.",
    "examples": [
      "//Code"
    ],
    "lineNumber": 175,
    "params": [
      {
        "name": "path",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/utils.js",
    "memberof": null,
    "longname": "js/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "'use strict';\n\n\n\nexport function resolveURL() {\n  var base, i, key, len, path, queryString, value;\n  base = arguments[0];\n  len = arguments.length;\n  queryString = '';\n  i = 1;\n  while (i < len) {\n    path = arguments[i];\n    if (!path) {\n      i++;\n      continue;\n    }\n    if (typeof path === 'object') {\n\n      /*jshint -W089 */\n      for (key in path) {\n        if (queryString.length > 0) {\n          queryString += '&';\n        }\n        value = path[key];\n        queryString += key + '=' + value;\n        i++;\n      }\n      continue;\n    }\n    if (path && path.indexOf('/') !== 0) {\n      path = '/' + path;\n    }\n    if (base.substr(base.length - 1) === '/') {\n      base = base.substr(0, base.length - 1);\n    }\n    base += path;\n    i++;\n  }\n  if (queryString.length > 0) {\n    base += '?' + queryString;\n  }\n  return base;\n}\n\n\nexport function extend(dest, src) {\n  var out = dest;\n  for (var i in src) {\n    out[i] = src[i];\n  }\n  return out;\n}\nexport function extendDeep(parent, child) {\n  var i, toStr = Object.prototype.toString,\n    astr = '[object Array]';\n  child = child || {};\n  for (i in parent) {\n    if (parent.hasOwnProperty(i)) {\n      if (typeof parent[i] === 'object') {\n        child[i] = (toStr.call(parent[i]) === astr) ? [] : {};\n        extendDeep(parent[i], child[i]);\n      } else {\n        child[i] = parent[i];\n      }\n    }\n  }\n  return child;\n}\n\n//https://coffeescript-cookbook.github.io/chapters/classes_and_objects/mixins\nexport function extendClass(child, parent) {\n  var hasProp = {}.hasOwnProperty;\n  for (var key in parent) {\n    if (hasProp.call(parent, key)) {\n      child[key] = parent[key];\n    }\n  }\n  /* jshint ignore:start */\n  function ctor() {\n    this.constructor = child;\n  }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n  child.__super__ = parent.prototype;\n  /* jshint ignore:end */\n  return child;\n}\n\n\n\n/**\n This function was modeled on jQuery's $.type function.\n https://coffeescript-cookbook.github.io/chapters/classes_and_objects/type-function\n */\nexport function type(obj) {\n  var classToType;\n  if (obj === void 0 || obj === null) {\n    return String(obj);\n  }\n  classToType = {\n    '[object Boolean]': 'boolean',\n    '[object Number]': 'number',\n    '[object String]': 'string',\n    '[object Function]': 'function',\n    '[object Array]': 'array',\n    '[object Date]': 'date',\n    '[object RegExp]': 'regexp',\n    '[object Object]': 'object'\n  };\n  return classToType[Object.prototype.toString.call(obj)];\n}\n\n\n\n//http://www.joezimjs.com/javascript/javascript-mixins-functional-inheritance/\nexport function addMixin(obj, mixin) {\n  return this.extend(mixin, obj);\n}\n\nexport function debounce(name, func, wait, immediate) {\n  var timeout;\n  return function() {\n    var context = this,\n      args = arguments;\n    var later = function() {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n}\nexport function mixin(target, source) {\n  target = target.prototype;\n  source = source.prototype;\n\n  Object.getOwnPropertyNames(source).forEach(function(name) {\n    if (name !== 'constructor') {\n      Object.defineProperty(target, name, Object.getOwnPropertyDescriptor(source, name));\n    }\n  });\n}\n\nexport function mix() {\n  var arg, prop, child = {};\n  for (arg = 0; arg < arguments.length; arg += 1) {\n    for (prop in arguments[arg]) {\n      if (arguments[arg].hasOwnProperty(prop)) {\n        child[prop] = arguments[arg][prop];\n      }\n    }\n  }\n  return child;\n}\n\n\n\n/*!\n Math.uuid.js (v1.4)\n http://www.broofa.com\n mailto:robert@broofa.com\n Copyright (c) 2010 Robert Kieffer\n Dual licensed under the MIT and GPL licenses.\n */\n\n/*\n * Generate a random uuid.\n *\n * USAGE: Math.uuid(length, radix)\n *   length - the desired number of characters\n *   radix  - the number of allowable values for each character.\n *\n * EXAMPLES:\n *   // No arguments  - returns RFC4122, version 4 ID\n *   >>> Math.uuid()\n *   \"92329D39-6F5C-4520-ABFC-AAB64544E172\"\n *\n *   // One argument - returns ID of the specified length\n *   >>> Math.uuid(15)     // 15 character ID (default base=62)\n *   \"VcydxgltxrVZSTV\"\n *\n *   // Two arguments - returns ID of the specified length, and radix.\n *   // (Radix must be <= 62)\n *   >>> Math.uuid(8, 2)  // 8 character ID (base=2)\n *   \"01001010\"\n *   >>> Math.uuid(8, 10) // 8 character ID (base=10)\n *   \"47473046\"\n *   >>> Math.uuid(8, 16) // 8 character ID (base=16)\n *   \"098F4D35\"\n */\nvar chars = (\n  '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n  'abcdefghijklmnopqrstuvwxyz'\n).split('');\n\nfunction getValue(radix) {\n  return 0 | Math.random() * radix;\n}\nexport function uuid(len, radix) {\n  radix = radix || chars.length;\n  var out = '';\n  var i = -1;\n\n  if (len) {\n    // Compact form\n    while (++i < len) {\n      out += chars[getValue(radix)];\n    }\n    return out;\n  }\n  // rfc4122, version 4 form\n  // Fill in random data.  At i==19 set the high bits of clock sequence as\n  // per rfc4122, sec. 4.1.5\n  while (++i < 36) {\n    switch (i) {\n      case 8:\n      case 13:\n      case 18:\n      case 23:\n        out += '-';\n        break;\n      case 19:\n        out += chars[(getValue(16) & 0x3) | 0x8];\n        break;\n      default:\n        out += chars[getValue(16)];\n    }\n  }\n\n  return out;\n}\n\n\n\n//http://jscriptpatterns.blogspot.com/2013/01/javascript-interfaces.html\n/**\n Usage:\n var IExample = new Interface('Example', ['add', 'remove', 'get']);\n var ExampleClass = {\n  add: function(){},\n  remove: function(){},\n  get: function(){}\n};\n\n Interface.ensureImplements(ExampleClass, IExample)\n */\n// Constructor.\nfunction Interface(name, methods) {\n\n  if (arguments.length !== 2) {\n    throw new Error(\"Interface constructor called with \" + arguments.length + \"arguments, but expected exactly 2.\");\n  }\n\n  this.name = name;\n  this.methods = [];\n\n  for (var i = 0, len = methods.length; i < len; i++) {\n    if (typeof methods[i] !== 'string') {\n      throw new Error(\"Interface constructor expects method names to be passed in as a string.\");\n    }\n\n    this.methods.push(methods[i]);\n  }\n}\n\n// Static class method.\nInterface.ensureImplements = function(object) {\n  if (arguments.length < 2) {\n    throw new Error('Function Interface.ensureImplements called with ' + arguments.length +\n      'arguments, but expected at least 2.');\n  }\n\n  for (var i = 1, len = arguments.length; i < len; i++) {\n    var _interface = arguments[i];\n    if (_interface.constructor !== Interface) {\n      throw new Error(\n        'Function Interface.ensureImplements expects arguments two and above to be instances of Interface.');\n    }\n\n    for (var j = 0, methodsLen = _interface.methods.length; j < methodsLen; j++) {\n      var method = _interface.methods[j];\n      if (!object[method] || typeof object[method] !== 'function') {\n        throw new Error('Function Interface.ensureImplements: object does not implement the ' + _interface.name +\n          ' interface. Method ' + method + ' was not found. ');\n      }\n    }\n  }\n  return true;\n};\n\n\n/**\n * I handle mixing classes. This generic aggregation function is usually provided by a library like this one, of course]\n */\nexport var aggregation = (baseClass, ...mixins) => {\n  let base = class _Combined extends baseClass {\n    constructor(...args) {\n      super(...args);\n      mixins.forEach((mixin) => {\n        mixin.prototype.initializer.call(this);\n      });\n    }\n  };\n  let copyProps = (target, source) => {\n    Object.getOwnPropertyNames(source)\n      .concat(Object.getOwnPropertySymbols(source))\n      .forEach((prop) => {\n        if (prop.match(/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/)) {\n          return;\n        }\n\n        Object.defineProperty(target, prop, Object.getOwnPropertyDescriptor(source, prop));\n      });\n  };\n  mixins.forEach((mixin) => {\n    copyProps(base.prototype, mixin.prototype);\n    copyProps(base, mixin);\n  });\n  return base;\n};\n"
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "resolveURL",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~resolveURL",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{resolveURL}",
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "extend",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~extend",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{extend}",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "params": [
      {
        "name": "dest",
        "types": [
          "*"
        ]
      },
      {
        "name": "src",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "extendDeep",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~extendDeep",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{extendDeep}",
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "parent",
        "types": [
          "*"
        ]
      },
      {
        "name": "child",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "extendClass",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~extendClass",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{extendClass}",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      },
      {
        "name": "parent",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "type",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~type",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{type}",
    "description": "This function was modeled on jQuery's $.type function.\nhttps://coffeescript-cookbook.github.io/chapters/classes_and_objects/type-function",
    "lineNumber": 95,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "addMixin",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~addMixin",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{addMixin}",
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      },
      {
        "name": "mixin",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "debounce",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~debounce",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{debounce}",
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "func",
        "types": [
          "*"
        ]
      },
      {
        "name": "wait",
        "types": [
          "*"
        ]
      },
      {
        "name": "immediate",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "mixin",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~mixin",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{mixin}",
    "description": null,
    "lineNumber": 139,
    "undocument": true,
    "params": [
      {
        "name": "target",
        "types": [
          "*"
        ]
      },
      {
        "name": "source",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "mix",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~mix",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{mix}",
    "description": null,
    "lineNumber": 150,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "chars",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~chars",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "getValue",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~getValue",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 202,
    "undocument": true,
    "params": [
      {
        "name": "radix",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "uuid",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~uuid",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{uuid}",
    "description": null,
    "lineNumber": 205,
    "undocument": true,
    "params": [
      {
        "name": "len",
        "types": [
          "*"
        ]
      },
      {
        "name": "radix",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "Interface",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~Interface",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": null,
    "description": "Usage:\nvar IExample = new Interface('Example', ['add', 'remove', 'get']);\nvar ExampleClass = {\n add: function(){},\n remove: function(){},\n get: function(){}\n};\nInterface.ensureImplements(ExampleClass, IExample)",
    "lineNumber": 254,
    "params": [
      {
        "name": "name",
        "types": [
          "*"
        ]
      },
      {
        "name": "methods",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "ensureImplements",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~ensureImplements",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 273,
    "undocument": true,
    "params": [
      {
        "name": "object",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    },
    "generator": false
  },
  {
    "kind": "variable",
    "static": true,
    "variation": null,
    "name": "aggregation",
    "memberof": "js/utils.js",
    "longname": "js/utils.js~aggregation",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/utils.js",
    "importStyle": "{aggregation}",
    "description": "I handle mixing classes. This generic aggregation function is usually provided by a library like this one, of course]",
    "lineNumber": 301,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/view.js",
    "memberof": null,
    "longname": "js/view.js",
    "access": null,
    "description": null,
    "lineNumber": 10,
    "content": "/**\n * View class provides event dispatching.\n * @example\n * var View = new View('namespace');\n       View.publish('event', {name: value});\n\n * @param {String} name - The name of the View.\n * @return {View} Instance of the View.\n */\nexport default class View {\n\n  constructor(options) {\n    console.warn('new View', options);\n    this.id = options.id;\n    this.params = options.params || {};\n    this.url = options.url || '';\n    this.main = options.main || false;\n    this.element = document.createElement('px-view');\n  }\n\n  toHTML() {\n    console.log(this, this.element);\n  }\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "View",
    "memberof": "js/view.js",
    "longname": "js/view.js~View",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/view.js",
    "importStyle": "View",
    "description": "View class provides event dispatching.",
    "examples": [
      "var View = new View('namespace');\n      View.publish('event', {name: value});"
    ],
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the View."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "View"
      ],
      "spread": false,
      "description": "Instance of the View."
    },
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/view.js~View",
    "longname": "js/view.js~View#constructor",
    "access": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "js/view.js~View",
    "longname": "js/view.js~View#id",
    "access": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "params",
    "memberof": "js/view.js~View",
    "longname": "js/view.js~View#params",
    "access": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "url",
    "memberof": "js/view.js~View",
    "longname": "js/view.js~View#url",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "main",
    "memberof": "js/view.js~View",
    "longname": "js/view.js~View#main",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "element",
    "memberof": "js/view.js~View",
    "longname": "js/view.js~View#element",
    "access": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "toHTML",
    "memberof": "js/view.js~View",
    "longname": "js/view.js~View#toHTML",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/views.js",
    "memberof": null,
    "longname": "js/views.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "import BaseClass from './base';\nimport View from './view';\n\n\n\n/**\n * Views class provides event dispatching.\n * @example\n * var Views = new Views('namespace');\n       Views.publish('event', {name: value});\n\n * @param {String} name - The name of the Views.\n * @return {Views} Instance of the Views.\n */\nexport default class Views extends BaseClass {\n\n  constructor(options) {\n    super(options.id, options);\n    this.id = options.id;\n    this.selected = options.selected || 0;\n    this.selectedView = {};\n    this.views = [];\n    this.viewMap = new Map();\n    //  this.router = new Router(options);\n\n    if (options.views) {\n      options.views.forEach((view) => {\n        this.add(view);\n      });\n    }\n\n    this.selectViewByIndex(this.selected);\n    return this;\n  }\n\n  created() {\n    console.warn('Views created');\n  }\n\n  attached() {\n    console.warn('Views attached');\n  }\n\n  add(v) {\n    let view = new View(v);\n    view.index = this.views.length;\n    this[view.id] = view;\n    this.views.push(view);\n    this.viewMap.set(view.id, view);\n    return this;\n  }\n\n  get(key) {\n    return this.viewMap.get(key);\n  }\n\n  getViews() {\n    return this.viewMap.entries();\n  }\n\n  selectView(key) {\n    console.warn('Views.selectView()', key);\n    this.selectedView = this.viewMap.get(key);\n    this.selected = this.views.indexOf(this.selectedView);\n    return this;\n  }\n\n  getSelectedView() {\n    return this.selectedView;\n  }\n\n  getSelectedIndex() {\n    return this.views.indexOf(this.getSelectedView());\n  }\n\n  nextView() {\n    var items = this.views,\n      len = items.length,\n      counter = this.selected,\n      index = this.selected + 1;\n    counter++;\n\n    if (counter >= len) {\n      console.warn('Reached last item');\n      counter = 0;\n    }\n    this.selected = counter;\n    this.selectView(this.views[this.selected].id);\n\n    console.log('nextView', items, len, 'index', index, 'selected', this.selected);\n    return this.selected;\n  }\n\n  prevView() {\n    var items = this.views,\n      len = items.length,\n      counter = this.selected,\n      index = this.selected;\n\n    counter--;\n\n    if (counter >= len) {\n      counter = index - len;\n    } else if (counter < 0) {\n      counter = 0;\n      console.warn('Reached first item');\n    }\n    this.selected = counter;\n    this.selectView(this.views[this.selected].id);\n\n    console.log('prevView', items, len, 'index', index, 'selected', this.selected);\n\n    return this.selected;\n  }\n\n  selectViewByIndex(i) {\n    this.selectView(this.views[i].id);\n  }\n\n  changeView(id) {\n    this.selectView(id);\n  }\n\n}\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "Views",
    "memberof": "js/views.js",
    "longname": "js/views.js~Views",
    "access": null,
    "export": true,
    "importPath": "px-mobile/js/views.js",
    "importStyle": "Views",
    "description": "Views class provides event dispatching.",
    "examples": [
      "var Views = new Views('namespace');\n      Views.publish('event', {name: value});"
    ],
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The name of the Views."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Views"
      ],
      "spread": false,
      "description": "Instance of the Views."
    },
    "interface": false,
    "extends": [
      "js/base~BaseClass"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#constructor",
    "access": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#id",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selected",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selected",
    "access": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedView",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selectedView",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "views",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#views",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "viewMap",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#viewMap",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "created",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#created",
    "access": null,
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "attached",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#attached",
    "access": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "add",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#add",
    "access": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "params": [
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "get",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#get",
    "access": null,
    "description": null,
    "lineNumber": 53,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getViews",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#getViews",
    "access": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectView",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selectView",
    "access": null,
    "description": null,
    "lineNumber": 61,
    "undocument": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selectedView",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selectedView",
    "access": null,
    "description": null,
    "lineNumber": 63,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selected",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selected",
    "access": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSelectedView",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#getSelectedView",
    "access": null,
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "getSelectedIndex",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#getSelectedIndex",
    "access": null,
    "description": null,
    "lineNumber": 72,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "nextView",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#nextView",
    "access": null,
    "description": null,
    "lineNumber": 76,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selected",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selected",
    "access": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "prevView",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#prevView",
    "access": null,
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "selected",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selected",
    "access": null,
    "description": null,
    "lineNumber": 108,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "selectViewByIndex",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#selectViewByIndex",
    "access": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "params": [
      {
        "name": "i",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "changeView",
    "memberof": "js/views.js~Views",
    "longname": "js/views.js~Views#changeView",
    "access": null,
    "description": null,
    "lineNumber": 120,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "file",
    "static": true,
    "variation": null,
    "name": "js/x-module.js",
    "memberof": null,
    "longname": "js/x-module.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "class CustomFramework {\n\t\tconstructor() {\n\t\t\t\tconsole.warn('CustomFramework');\n\t\t}\n\t\tstatic extend(prototype, api) {\n\t\t\t\tif (prototype && api) {\n\t\t\t\t\t\tObject.getOwnPropertyNames(api).forEach(function(n) {\n\t\t\t\t\t\t\t\tvar pd = Object.getOwnPropertyDescriptor(prototype, n);\n\t\t\t\t\t\t\t\tif (pd) {\n\t\t\t\t\t\t\t\t\t\tObject.defineProperty(n, api, prototype);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t\treturn prototype || api;\n\t\t}\n}\n/*\n This is a xModule element like Polymer's dom-module element.\n It enables you to register a new custom element component.\n*/\nclass XModule extends HTMLElement {\n\t\tconstructor() {\n\t\t\t\tsuper()\n\t\t\t\tconsole.warn('New custom element!');\n\t\t\t\treturn document.createElement('x-module')\n\t\t\t\tthis.register(this.id)\n\t\t}\n\n\t  register(id){\n\t\t\tthis.id = id || this.tagName;\n\t\t}\n\n\t\tvalue() {\n\t\t\t\t//1st node is always a template\n\t\t\t\tthis.tmpl = this.children[0];\n\t\t\t\t//2nd node is always a script\n\t\t\t\tthis.script = this.children[1];\n\t\t\t\tlet clone = document.importNode(this.tmpl.content, true);\n\t\t\t\tthis.createShadowRoot().appendChild(clone);\n\t\t}\n\n\t\tcreatedCallback() {\n\t\t\t\tconsole.log('created', this.children, this.id)\n\t\t\t\t\t\tthis.value()\n\t\t}\n\n\t\tattachedCallback() {\n\t\t\t\tconsole.log('attached', this);\n\t\t}\n\n\t\tdetachedCallback() {\n\t\t\t\tconsole.log('detached', this);\n\t\t}\n\n\t\tattributeChangedCallback(attr, oldVal, newVal) {\n\t\t\t\tconsole.log(attr, 'from', oldVal, 'to', newVal, this);\n\t\t}\n}\n\ndocument.registerElement('x-module', XModule);\n\n//Define custom element that wilus to create custom elements.\n//document.registerElement('custom-element', CustomElement);\nvar JSInput = function(){};\nCustomFramework.extend(JSInput.prototype, XModule)\n\nconsole.log(JSInput);\n"
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "CustomFramework",
    "memberof": "js/x-module.js",
    "longname": "js/x-module.js~CustomFramework",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/x-module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "interface": false
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/x-module.js~CustomFramework",
    "longname": "js/x-module.js~CustomFramework#constructor",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": true,
    "variation": null,
    "name": "extend",
    "memberof": "js/x-module.js~CustomFramework",
    "longname": "js/x-module.js~CustomFramework.extend",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "params": [
      {
        "name": "prototype",
        "types": [
          "*"
        ]
      },
      {
        "name": "api",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "generator": false
  },
  {
    "kind": "class",
    "static": true,
    "variation": null,
    "name": "XModule",
    "memberof": "js/x-module.js",
    "longname": "js/x-module.js~XModule",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/x-module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "interface": false,
    "extends": [
      "HTMLElement"
    ]
  },
  {
    "kind": "constructor",
    "static": false,
    "variation": null,
    "name": "constructor",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#constructor",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "register",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#register",
    "access": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "id",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#id",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "value",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#value",
    "access": null,
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "tmpl",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#tmpl",
    "access": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "member",
    "static": false,
    "variation": null,
    "name": "script",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#script",
    "access": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "createdCallback",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#createdCallback",
    "access": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "attachedCallback",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#attachedCallback",
    "access": null,
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "detachedCallback",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#detachedCallback",
    "access": null,
    "description": null,
    "lineNumber": 51,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "method",
    "static": false,
    "variation": null,
    "name": "attributeChangedCallback",
    "memberof": "js/x-module.js~XModule",
    "longname": "js/x-module.js~XModule#attributeChangedCallback",
    "access": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "attr",
        "types": [
          "*"
        ]
      },
      {
        "name": "oldVal",
        "types": [
          "*"
        ]
      },
      {
        "name": "newVal",
        "types": [
          "*"
        ]
      }
    ],
    "generator": false
  },
  {
    "kind": "function",
    "static": true,
    "variation": null,
    "name": "JSInput",
    "memberof": "js/x-module.js",
    "longname": "js/x-module.js~JSInput",
    "access": null,
    "export": false,
    "importPath": "px-mobile/js/x-module.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "params": [],
    "generator": false
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "external",
    "static": true,
    "variation": null,
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": null,
    "builtinExternal": true
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/app-spec.js",
    "memberof": null,
    "longname": "specs/app-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {App} */\ndescribe('App', function() {\n  var app = new px.mobile.App('app', {\n    debug: true,\n    session: null\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe0",
    "testId": 0,
    "memberof": "specs/app-spec.js",
    "testDepth": 0,
    "longname": "specs/app-spec.js~describe0",
    "access": null,
    "description": "App",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{App}"
      }
    ],
    "testTargets": [
      "App"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/base-class-spec.js",
    "memberof": null,
    "longname": "specs/base-class-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {BaseClass} */\ndescribe('BaseClass', function() {\n  var myClass = new px.mobile.BaseClass('BaseClass');\n\n  /** @test {BaseClass#constructor} */\n  it('constructor()', function() {\n    assert.ok(myClass, 'Should ..');\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe1",
    "testId": 1,
    "memberof": "specs/base-class-spec.js",
    "testDepth": 0,
    "longname": "specs/base-class-spec.js~describe1",
    "access": null,
    "description": "BaseClass",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{BaseClass}"
      }
    ],
    "testTargets": [
      "BaseClass"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it2",
    "testId": 2,
    "memberof": "specs/base-class-spec.js~describe1",
    "testDepth": 1,
    "longname": "specs/base-class-spec.js~describe1.it2",
    "access": null,
    "description": "constructor()",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{BaseClass#constructor}"
      }
    ],
    "testTargets": [
      "BaseClass#constructor"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/collection-spec.js",
    "memberof": null,
    "longname": "specs/collection-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Collection} */\ndescribe('Collection', function() {\n  var collection = null;\n  beforeEach(function() {\n    collection = new px.mobile.Collection.extend({\n      url: '/default',\n      idField: '_id',\n      defaults: {\n        _id: 'test-doc1',\n        _rev: null,\n        name: 'test doc',\n        title: 'some document',\n        type: 'doc',\n        channels: ['*']\n      }\n    });\n  });\n\n  it('should set passed properties on collection', function(done) {\n    assert.equal(collection.url, '/default');\n    done();\n  });\n\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe3",
    "testId": 3,
    "memberof": "specs/collection-spec.js",
    "testDepth": 0,
    "longname": "specs/collection-spec.js~describe3",
    "access": null,
    "description": "Collection",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Collection}"
      }
    ],
    "testTargets": [
      "Collection"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it4",
    "testId": 4,
    "memberof": "specs/collection-spec.js~describe3",
    "testDepth": 1,
    "longname": "specs/collection-spec.js~describe3.it4",
    "access": null,
    "description": "should set passed properties on collection",
    "lineNumber": 19
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/component-spec.js",
    "memberof": null,
    "longname": "specs/component-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "describe('Component', function() {\n  it('should..', function(done) {\n    done();\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe5",
    "testId": 5,
    "memberof": "specs/component-spec.js",
    "testDepth": 0,
    "longname": "specs/component-spec.js~describe5",
    "access": null,
    "description": "Component",
    "lineNumber": 1
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it6",
    "testId": 6,
    "memberof": "specs/component-spec.js~describe5",
    "testDepth": 1,
    "longname": "specs/component-spec.js~describe5.it6",
    "access": null,
    "description": "should..",
    "lineNumber": 2
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/core-spec.js",
    "memberof": null,
    "longname": "specs/core-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "  /** @test {Core} */\n  describe('Core', function() {\n    var app = new px.mobile.Core();\n    it('should..', function(done) {\n      done();\n    });\n    /** @test {Core#start} */\n    it('start()', function() {\n      assert.ok(app.start, 'Should start');\n    });\n    /** @test {Core#stop} */\n    it('stop()', function() {\n      assert.ok(app.stop, 'Should stop');\n    });\n  });\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe7",
    "testId": 7,
    "memberof": "specs/core-spec.js",
    "testDepth": 0,
    "longname": "specs/core-spec.js~describe7",
    "access": null,
    "description": "Core",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Core}"
      }
    ],
    "testTargets": [
      "Core"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it8",
    "testId": 8,
    "memberof": "specs/core-spec.js~describe7",
    "testDepth": 1,
    "longname": "specs/core-spec.js~describe7.it8",
    "access": null,
    "description": "should..",
    "lineNumber": 4
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it9",
    "testId": 9,
    "memberof": "specs/core-spec.js~describe7",
    "testDepth": 1,
    "longname": "specs/core-spec.js~describe7.it9",
    "access": null,
    "description": "start()",
    "lineNumber": 8,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Core#start}"
      }
    ],
    "testTargets": [
      "Core#start"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it10",
    "testId": 10,
    "memberof": "specs/core-spec.js~describe7",
    "testDepth": 1,
    "longname": "specs/core-spec.js~describe7.it10",
    "access": null,
    "description": "stop()",
    "lineNumber": 12,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Core#stop}"
      }
    ],
    "testTargets": [
      "Core#stop"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/db-spec.js",
    "memberof": null,
    "longname": "specs/db-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {DB} */\ndescribe('px.mobile.DB', function() {\n  var db = null,\n    testAttachmentDoc = 'test-doc-attachment-' + Date.now(),\n    successCallback, errorCallback,\n    testObj = {\n      _id: 'test-' + Date.now(),\n      title: 'Test Doc'\n    },\n    docs = [{\n      _id: 'test-doc-1-' + Date.now(),\n      name: 'Test Doc 1'\n    }, {\n      _id: 'test-doc-2-' + Date.now(),\n      name: 'Test Doc 2'\n    }, {\n      _id: 'test-doc-3-' + Date.now(),\n      name: 'Test Doc 3'\n    }];\n\n  before(function() {\n    window.db = db = new px.mobile.DB('test', {\n      baseUrl: '/default'\n    });\n  });\n\n\n  it('should be defined', function() {\n    assert.ok(px.mobile.DB);\n  });\n\n  it('should have methods: allDocs, get, put, post, remove, bulkDocs, getAttachment, saveAttachment', function(done) {\n    assert.ok(db.allDocs);\n    assert.ok(db.get);\n    assert.ok(db.post);\n    assert.ok(db.put);\n    assert.ok(db.remove);\n    assert.ok(db.getAttachment);\n    assert.ok(db.saveAttachment);\n    done();\n  });\n\n  xdescribe('Changes', function() {\n    var changes, changeHandlers = {};\n\n    beforeEach(function() {\n      changeHandlers.changeHandler = function(done) {\n        done();\n      };\n      changeHandlers.completeHandler = function(done) {\n        done();\n      };\n      changeHandlers.errorHandler = function(done) {\n        done();\n      };\n      changes = db.changes({\n          since: 'now',\n          live: true,\n          interval: 1000,\n          include_docs: true\n        })\n        .on('change', changeHandlers.changeHandler)\n        .on('complete', changeHandlers.completeHandler)\n        .on('error', changeHandlers.errorHandler);\n\n      //jasmine.clock().install();\n    });\n\n    afterEach(function() {\n      //jasmine.clock().uninstall();\n      changes.cancel();\n    });\n\n    /** @test {DB#changes} */\n    it('changes() - should request changes and invoke callbacks on events', function(done) {\n\n      //assert.ok(changeHandlers.changeHandler).not.toHaveBeenCalled();\n\n      setTimeout(function() {\n        console.warn(changeHandlers.changeHandler);\n        assert.ok(changeHandlers.changeHandler);\n        done();\n      }, 2000);\n    });\n\n  });\n\n  /** @test {DB#info} */\n  it('info() - should resolve promise on success with database info', function(done) {\n    db.info().then(function(resp) {\n      assert.equal(resp.status, 200);\n      assert.ok(resp.data);\n      assert.ok(resp.data.db_name);\n      assert.ok(resp.data.update_seq);\n\n      done();\n    }, window.failSpec);\n  });\n\n  /** @test {DB#bulkDocs} */\n  it('bulkDocs(docs) - should resolve promise on success', function(done) {\n    db.bulkDocs(docs).then(function(resp) {\n      docs = resp.data;\n      assert.equal(resp.status, 201);\n      assert.equal(resp.data.length, 3);\n      done();\n    }, window.failSpec);\n  });\n\n  /** @test {DB#bulkDocs} */\n  it('bulkDocs(docs) - should remove doc if _delete flag is set', function(done) {\n    docs.forEach(function(doc) {\n      if (doc._rev) {\n        doc._deleted = true;\n      }\n    });\n    db.bulkDocs(docs).then(function(resp) {\n      docs = resp.data;\n      assert.equal(resp.status, 201);\n      assert.equal(resp.data.length, 3);\n      done();\n    }, window.failSpec);\n  });\n\n  /** @test {DB#allDocs} */\n  it('allDocs(options) - should resolve promise on success', function(done) {\n    db.allDocs({\n      limit: 5,\n      include_docs: true\n    }).then(function(resp) {\n      assert.equal(resp.status, 200);\n      assert.ok(resp.data.rows);\n      assert.equal(resp.data.rows.length, 5);\n      done();\n    }, window.failSpec);\n  });\n\n\n  /** @test {DB#put} */\n  it('put(doc) - should resolve promise on success', function(done) {\n    db.put(testObj).then(function(resp) {\n      assert.equal(resp.status, 201);\n      assert.ok(resp.data.rev);\n      done();\n    });\n  });\n\n  /** @test {DB#get} */\n  it('get(id) - should resolve promise on success', function(done) {\n    db.get(testObj._id).then(function(resp) {\n      assert.equal(resp.status, 200);\n      assert.ok(resp.data._rev);\n      done();\n    }, window.failSpec);\n  });\n\n  /** @test {DB#remove} */\n  it('remove(id, rev) - should resolve promise on success', function(done) {\n    db.get(testObj._id).then(function(resp) {\n      testObj._rev = resp.data._rev;\n      db.remove(testObj._id, testObj._rev).then(function(res) {\n        assert.equal(res.status, 200);\n        done();\n      }, window.failSpec);\n    });\n  });\n\n  /** @test {DB#post} */\n  it('post(doc) - should insert document with generated id and resolve promise on success.', function(done) {\n    db.post({\n      title: 'New Doc'\n    }).then(function(resp) {\n      assert.equal(resp.status, 201);\n      assert.ok(resp.data.id);\n      assert.ok(resp.data.rev);\n      done();\n    }, window.failSpec);\n  });\n\n\n\n  /** @test {DB#saveAttachment} */\n  it('saveAttachment(id, rev, filename, type, file) - should save file attachment',\n    function(done) {\n      var aFileParts = ['<a id=\"a\"><b id=\"b\">hey!</b></a>'];\n      var myBlob = new Blob(aFileParts, {\n        type: 'text/html'\n      });\n      db.put({\n        _id: testAttachmentDoc\n      }).then(function(resp) {\n        assert.equal(resp.ok, true);\n        db.get(testAttachmentDoc).then(function(resp) {\n          assert.equal(resp.ok, true);\n          db.saveAttachment(resp.data._id, resp.data._rev, 'file.html', myBlob.type,\n            myBlob).then(function(resp) {\n            assert.equal(resp.ok, true);\n            done();\n          }, window.failSpec);\n        }, window.failSpec);\n      }, window.failSpec);\n\n    });\n\n  /** @test {DB#getAttachment} */\n  it('getAttachment(id, filename) - should return file attachment', function(done) {\n    db.getAttachment(testAttachmentDoc, 'file.html').then(function(resp) {\n      assert.equal(resp.ok, true);\n      done();\n    }, window.failSpec);\n  });\n\n\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe11",
    "testId": 11,
    "memberof": "specs/db-spec.js",
    "testDepth": 0,
    "longname": "specs/db-spec.js~describe11",
    "access": null,
    "description": "px.mobile.DB",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB}"
      }
    ],
    "testTargets": [
      "DB"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it12",
    "testId": 12,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it12",
    "access": null,
    "description": "should be defined",
    "lineNumber": 28
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it13",
    "testId": 13,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it13",
    "access": null,
    "description": "should have methods: allDocs, get, put, post, remove, bulkDocs, getAttachment, saveAttachment",
    "lineNumber": 32
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it14",
    "testId": 14,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it14",
    "access": null,
    "description": "changes() - should request changes and invoke callbacks on events",
    "lineNumber": 75,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#changes}"
      }
    ],
    "testTargets": [
      "DB#changes"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it15",
    "testId": 15,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it15",
    "access": null,
    "description": "info() - should resolve promise on success with database info",
    "lineNumber": 89,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#info}"
      }
    ],
    "testTargets": [
      "DB#info"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it16",
    "testId": 16,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it16",
    "access": null,
    "description": "bulkDocs(docs) - should resolve promise on success",
    "lineNumber": 101,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#bulkDocs}"
      }
    ],
    "testTargets": [
      "DB#bulkDocs"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it17",
    "testId": 17,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it17",
    "access": null,
    "description": "bulkDocs(docs) - should remove doc if _delete flag is set",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#bulkDocs}"
      }
    ],
    "testTargets": [
      "DB#bulkDocs"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it18",
    "testId": 18,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it18",
    "access": null,
    "description": "allDocs(options) - should resolve promise on success",
    "lineNumber": 126,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#allDocs}"
      }
    ],
    "testTargets": [
      "DB#allDocs"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it19",
    "testId": 19,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it19",
    "access": null,
    "description": "put(doc) - should resolve promise on success",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#put}"
      }
    ],
    "testTargets": [
      "DB#put"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it20",
    "testId": 20,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it20",
    "access": null,
    "description": "get(id) - should resolve promise on success",
    "lineNumber": 149,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#get}"
      }
    ],
    "testTargets": [
      "DB#get"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it21",
    "testId": 21,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it21",
    "access": null,
    "description": "remove(id, rev) - should resolve promise on success",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#remove}"
      }
    ],
    "testTargets": [
      "DB#remove"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it22",
    "testId": 22,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it22",
    "access": null,
    "description": "post(doc) - should insert document with generated id and resolve promise on success.",
    "lineNumber": 169,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#post}"
      }
    ],
    "testTargets": [
      "DB#post"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it23",
    "testId": 23,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it23",
    "access": null,
    "description": "saveAttachment(id, rev, filename, type, file) - should save file attachment",
    "lineNumber": 183,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#saveAttachment}"
      }
    ],
    "testTargets": [
      "DB#saveAttachment"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it24",
    "testId": 24,
    "memberof": "specs/db-spec.js~describe11",
    "testDepth": 1,
    "longname": "specs/db-spec.js~describe11.it24",
    "access": null,
    "description": "getAttachment(id, filename) - should return file attachment",
    "lineNumber": 206,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DB#getAttachment}"
      }
    ],
    "testTargets": [
      "DB#getAttachment"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/dom-spec.js",
    "memberof": null,
    "longname": "specs/dom-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {DOM} */\ndescribe('px.mobile.DOM', function() {\n\n  var el = null;\n  beforeEach(function() {\n    el = px.mobile.dom('#sandbox');\n  });\n  it('Element.addClass(className) - should add the class to the element.', function() {\n    el.addClass('testing');\n    expect(el.className).to.contain('testing');\n  });\n  it('Element.removeClass(className) - should remove the class to the element.', function() {\n    el.removeClass('testing');\n    expect(el.className).not.to.contain('testing');\n  });\n  it('Element.toggleClass(className) - should add/remove class from element', function() {\n    el.toggleClass('sandbox');\n    expect(el.className).to.contain('sandbox');\n    el.toggleClass('sandbox');\n    expect(el.className).not.to.contain('sandbox');\n  });\n  it('Element.hasClass(className) - should add the class to the element.', function() {\n    el.addClass('testing');\n    assert.equal(el.hasClass('testing'), true);\n    el.removeClass('testing');\n    assert.equal(el.hasClass('testing'), false);\n  });\n\n  it('Element.attr(name, value) - should get/set the attribute on the element.', function() {\n    el.attr('title', 'Test Element');\n    expect(el.attr('title')).to.be('Test Element');\n  });\n\n  it('Element.html() - should get/set the html in the element.', function() {\n    el.html('<h1>Sandbox</h1>');\n    expect(el.html()).to.contain('<h1>Sandbox</h1>');\n  });\n  it('Element.text() - should get/set the text content in the element.', function() {\n    expect(el.text()).to.contain('Sandbox');\n  });\n\n\n  it('dom.extend({}, obj1, obj2) - should return extended object.', function() {\n    var obj = {};\n    var obj1 = {\n      version: '1.0'\n    };\n    var obj2 = {\n      debug: true\n    };\n    px.mobile.dom.extend(obj, obj1, obj2);\n\n    assert.ok(obj.version);\n    assert.ok(obj.debug);\n  });\n  it('dom.extend({}, obj1, obj2) - should return extended nested object.', function() {\n    var obj = {};\n    var obj1 = {\n      version: '1.0',\n      session: {\n        user: {\n          username: 'jonnie'\n        }\n      }\n    };\n    var obj2 = {\n      debug: true,\n      auth: {\n        login: function() {},\n        logout: function() {}\n      }\n    };\n    px.mobile.dom.extend(obj, obj1, obj2);\n\n    assert.ok(obj.version);\n    assert.ok(obj.debug);\n    assert.ok(obj.session);\n    assert.ok(obj.session.user.username);\n    assert.ok(obj.auth.login);\n    assert.ok(obj.auth.logout);\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe25",
    "testId": 25,
    "memberof": "specs/dom-spec.js",
    "testDepth": 0,
    "longname": "specs/dom-spec.js~describe25",
    "access": null,
    "description": "px.mobile.DOM",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{DOM}"
      }
    ],
    "testTargets": [
      "DOM"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it26",
    "testId": 26,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it26",
    "access": null,
    "description": "Element.addClass(className) - should add the class to the element.",
    "lineNumber": 8
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it27",
    "testId": 27,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it27",
    "access": null,
    "description": "Element.removeClass(className) - should remove the class to the element.",
    "lineNumber": 12
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it28",
    "testId": 28,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it28",
    "access": null,
    "description": "Element.toggleClass(className) - should add/remove class from element",
    "lineNumber": 16
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it29",
    "testId": 29,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it29",
    "access": null,
    "description": "Element.hasClass(className) - should add the class to the element.",
    "lineNumber": 22
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it30",
    "testId": 30,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it30",
    "access": null,
    "description": "Element.attr(name, value) - should get/set the attribute on the element.",
    "lineNumber": 29
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it31",
    "testId": 31,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it31",
    "access": null,
    "description": "Element.html() - should get/set the html in the element.",
    "lineNumber": 34
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it32",
    "testId": 32,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it32",
    "access": null,
    "description": "Element.text() - should get/set the text content in the element.",
    "lineNumber": 38
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it33",
    "testId": 33,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it33",
    "access": null,
    "description": "dom.extend({}, obj1, obj2) - should return extended object.",
    "lineNumber": 43
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it34",
    "testId": 34,
    "memberof": "specs/dom-spec.js~describe25",
    "testDepth": 1,
    "longname": "specs/dom-spec.js~describe25.it34",
    "access": null,
    "description": "dom.extend({}, obj1, obj2) - should return extended nested object.",
    "lineNumber": 56
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/http-spec.js",
    "memberof": null,
    "longname": "specs/http-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {HTTP} */\ndescribe('px.mobile.HTTP', function() {\n  var http = null,\n    mockDoc = {};\n  before(function() {\n    http = new px.mobile.HTTP('http1', {\n      baseUrl: '/default'\n    });\n  });\n\n  // Use Sinon to replace jQuery's ajax method\n  // with a spy.\n  beforeEach(function() {\n    //sinon.spy(px.mobile, 'HTTP');\n  });\n\n  // Restor jQuery's ajax method to its\n  // original state\n  afterEach(function() {\n    //px.mobile.HTTP.restore();\n  });\n\n  it('should be defined', function() {\n    assert.ok(px.mobile.HTTP);\n  });\n\n  it('should have: put, post, delete, get, head, request', function(done) {\n    assert.ok(http.put);\n    assert.ok(http.post);\n    assert.ok(http.delete);\n    assert.ok(http.get);\n    assert.ok(http.head);\n    assert.ok(http.request);\n    done();\n  });\n  it('post(url, options) - should resolve promise on success', function(done) {\n    mockDoc._id = 'test-doc-' + Date.now();\n    http.put('/' + mockDoc._id, mockDoc).then(function(resp) {\n      assert.equal(resp.status, 201);\n      done();\n    }, window.failSpec);\n  });\n\n  it('get(url, options) - should resolve promise on success', function(done) {\n    http.get('/' + mockDoc._id).then(function(resp) {\n      assert.equal(resp.status, 200);\n      mockDoc = resp.data;\n      done();\n    }, window.failSpec);\n  });\n\n  it('put(url, options) - should resolve promise on success', function(done) {\n    //mockDoc.title = 'Updated at ' + Date.now();\n    http.put('/' + mockDoc._id + '?rev=' + mockDoc._rev, mockDoc).then(function(resp) {\n      assert.equal(resp.status, 201);\n      done();\n    }, window.failSpec);\n  });\n  it('head(url, options) - should resolve promise on success', function(done) {\n    http.head('/' + mockDoc._id).then(function(resp) {\n      assert.equal(resp.status, 200);\n      done();\n    }, window.failSpec);\n  });\n\n  it('delete(url, options) - should resolve promise on success', function(done) {\n    http.get('/' + mockDoc._id).then(function(resp) {\n      http.delete(mockDoc._id, {\n        params: {\n          rev: resp.data._rev\n        }\n      }).then(function(resp) {\n        assert.equal(resp.status, 200);\n        done();\n      }, window.failSpec);\n    });\n\n  });\n\n\n\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe35",
    "testId": 35,
    "memberof": "specs/http-spec.js",
    "testDepth": 0,
    "longname": "specs/http-spec.js~describe35",
    "access": null,
    "description": "px.mobile.HTTP",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{HTTP}"
      }
    ],
    "testTargets": [
      "HTTP"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it36",
    "testId": 36,
    "memberof": "specs/http-spec.js~describe35",
    "testDepth": 1,
    "longname": "specs/http-spec.js~describe35.it36",
    "access": null,
    "description": "should be defined",
    "lineNumber": 23
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it37",
    "testId": 37,
    "memberof": "specs/http-spec.js~describe35",
    "testDepth": 1,
    "longname": "specs/http-spec.js~describe35.it37",
    "access": null,
    "description": "should have: put, post, delete, get, head, request",
    "lineNumber": 27
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it38",
    "testId": 38,
    "memberof": "specs/http-spec.js~describe35",
    "testDepth": 1,
    "longname": "specs/http-spec.js~describe35.it38",
    "access": null,
    "description": "post(url, options) - should resolve promise on success",
    "lineNumber": 36
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it39",
    "testId": 39,
    "memberof": "specs/http-spec.js~describe35",
    "testDepth": 1,
    "longname": "specs/http-spec.js~describe35.it39",
    "access": null,
    "description": "get(url, options) - should resolve promise on success",
    "lineNumber": 44
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it40",
    "testId": 40,
    "memberof": "specs/http-spec.js~describe35",
    "testDepth": 1,
    "longname": "specs/http-spec.js~describe35.it40",
    "access": null,
    "description": "put(url, options) - should resolve promise on success",
    "lineNumber": 52
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it41",
    "testId": 41,
    "memberof": "specs/http-spec.js~describe35",
    "testDepth": 1,
    "longname": "specs/http-spec.js~describe35.it41",
    "access": null,
    "description": "head(url, options) - should resolve promise on success",
    "lineNumber": 59
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it42",
    "testId": 42,
    "memberof": "specs/http-spec.js~describe35",
    "testDepth": 1,
    "longname": "specs/http-spec.js~describe35.it42",
    "access": null,
    "description": "delete(url, options) - should resolve promise on success",
    "lineNumber": 66
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/interface-spec.js",
    "memberof": null,
    "longname": "specs/interface-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Interface} */\ndescribe('Interface', function() {\n  var Interface = new px.mobile.Interface('Interface', ['method1']);\n\n  /** @test {Interface#ensureImplements} */\n  it('ensureImplements()', function() {\n    assert.ok(px.mobile.Interface.ensureImplements);\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe43",
    "testId": 43,
    "memberof": "specs/interface-spec.js",
    "testDepth": 0,
    "longname": "specs/interface-spec.js~describe43",
    "access": null,
    "description": "Interface",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Interface}"
      }
    ],
    "testTargets": [
      "Interface"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it44",
    "testId": 44,
    "memberof": "specs/interface-spec.js~describe43",
    "testDepth": 1,
    "longname": "specs/interface-spec.js~describe43.it44",
    "access": null,
    "description": "ensureImplements()",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Interface#ensureImplements}"
      }
    ],
    "testTargets": [
      "Interface#ensureImplements"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/log-spec.js",
    "memberof": null,
    "longname": "specs/log-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Logger} */\ndescribe('px.mobile.Logger', function() {\n  it('should be defined', function() {\n    expect(px.mobile.Logger);\n  });\n  describe('new px.mobile.log()', function() {\n    var logger = null;\n    beforeEach(function() {\n      logger = new px.mobile.Logger('jasmine');\n\n    });\n    it('should have methods: info, warn, debug, error', function(done) {\n      assert.ok(logger.info);\n      assert.ok(logger.warn);\n      assert.ok(logger.debug);\n      assert.ok(logger.error);\n      done();\n    });\n    it('info() - should log info to console', function(done) {\n      logger.info('test');\n      assert.ok(logger.log);\n      done();\n    });\n    it('warn() - should log warn to console', function(done) {\n      logger.warn('test');\n      assert.ok(logger.log);\n      done();\n    });\n    it('debug() - should log debug to console', function(done) {\n      logger.debug('test');\n      assert.ok(logger.log);\n      done();\n    });\n    it('error() - should log error to console', function(done) {\n      logger.error('test');\n      assert.ok(logger.log);\n      done();\n    });\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe45",
    "testId": 45,
    "memberof": "specs/log-spec.js",
    "testDepth": 0,
    "longname": "specs/log-spec.js~describe45",
    "access": null,
    "description": "px.mobile.Logger",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Logger}"
      }
    ],
    "testTargets": [
      "Logger"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it46",
    "testId": 46,
    "memberof": "specs/log-spec.js~describe45",
    "testDepth": 1,
    "longname": "specs/log-spec.js~describe45.it46",
    "access": null,
    "description": "should be defined",
    "lineNumber": 3
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe47",
    "testId": 47,
    "memberof": "specs/log-spec.js~describe45",
    "testDepth": 1,
    "longname": "specs/log-spec.js~describe45.describe47",
    "access": null,
    "description": "new px.mobile.log()",
    "lineNumber": 6
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it48",
    "testId": 48,
    "memberof": "specs/log-spec.js~describe45.describe47",
    "testDepth": 2,
    "longname": "specs/log-spec.js~describe45.describe47.it48",
    "access": null,
    "description": "should have methods: info, warn, debug, error",
    "lineNumber": 12
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it49",
    "testId": 49,
    "memberof": "specs/log-spec.js~describe45.describe47",
    "testDepth": 2,
    "longname": "specs/log-spec.js~describe45.describe47.it49",
    "access": null,
    "description": "info() - should log info to console",
    "lineNumber": 19
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it50",
    "testId": 50,
    "memberof": "specs/log-spec.js~describe45.describe47",
    "testDepth": 2,
    "longname": "specs/log-spec.js~describe45.describe47.it50",
    "access": null,
    "description": "warn() - should log warn to console",
    "lineNumber": 24
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it51",
    "testId": 51,
    "memberof": "specs/log-spec.js~describe45.describe47",
    "testDepth": 2,
    "longname": "specs/log-spec.js~describe45.describe47.it51",
    "access": null,
    "description": "debug() - should log debug to console",
    "lineNumber": 29
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it52",
    "testId": 52,
    "memberof": "specs/log-spec.js~describe45.describe47",
    "testDepth": 2,
    "longname": "specs/log-spec.js~describe45.describe47.it52",
    "access": null,
    "description": "error() - should log error to console",
    "lineNumber": 34
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/model-spec.js",
    "memberof": null,
    "longname": "specs/model-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Model} */\ndescribe('px.mobile.Model', function() {\n  var model = null,\n    id;\n\n  before(function() {\n    id = 'test-doc-' + px.mobile.utils.uuid();\n    window.mockModel = model = new px.mobile.Model(id, {\n      baseUrl: '/default',\n      idField: '_id',\n      data: {\n        _id: id,\n        name: 'test doc'\n      }\n    });\n  });\n\n  /** @test {Model#url} */\n  it('url() - should return url of model', function(done) {\n    expect(model.url()).to.contain('' + model.get('_id'));\n    done();\n  });\n\n  /** @test {Model#get} */\n  it('get(name) - should get properties on object', function(done) {\n    expect(model.get('name')).to.contain('test doc');\n    done();\n  });\n\n  /** @test {Model#set} */\n  it('set({name: value}) - should selected properties on object', function(done) {\n    model.set({\n      name: 'new name'\n    });\n    expect(model.get('name')).to.contain('new name');\n    done();\n  });\n\n  /** @test {Model#toJSON} */\n  it('toJSON() - should return object properties as JSON', function(done) {\n    expect(model.toJSON()).to.contain(JSON.stringify(model.data));\n    done();\n  });\n\n  /** @test {Model#has} */\n  it('has(prop) - should return true/false if property exists', function(done) {\n    assert.equal(model.has('title'), false);\n    assert.equal(model.has('name'), true);\n    done();\n  });\n\n  /** @test {Model#subscribe} */\n  it('subscribe(event, cb) - should register callback for event', function(done) {\n    //var model = new px.mobile.Model('test-4', {baseUrl: 'http://localhost:5984/default'});\n    model.set({\n      'title': 'test'\n    });\n    model.subscribe('change', function(d) {\n      assert.ok(d);\n      done();\n    });\n    model.publish('change', {\n      name: 'value'\n    });\n  });\n\n  xdescribe('CRUD', function() {\n\n    /** @test {Model#set} */\n    it('save() - should make a http request and return response', function(done) {\n      model.save().then(function(resp) {\n        assert.equal(resp.status, 201);\n        done();\n      }, window.failSpec);\n    });\n\n    /** @test {Model#fetch} */\n    it('fetch() - should make a http request and return response', function(done) {\n      model.fetch().then(function(resp) {\n        assert.equal(resp.status, 200);\n        done();\n      }, window.failSpec);\n    });\n\n    /** @test {Model#destroy} */\n    it('destroy() - should make a DELETE request and return response', function(done) {\n      model.destroy().then(function(resp) {\n        assert.equal(resp.status, 200);\n        done();\n      }, window.failSpec);\n    });\n\n  });\n\n\n\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe53",
    "testId": 53,
    "memberof": "specs/model-spec.js",
    "testDepth": 0,
    "longname": "specs/model-spec.js~describe53",
    "access": null,
    "description": "px.mobile.Model",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model}"
      }
    ],
    "testTargets": [
      "Model"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it54",
    "testId": 54,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it54",
    "access": null,
    "description": "url() - should return url of model",
    "lineNumber": 19,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#url}"
      }
    ],
    "testTargets": [
      "Model#url"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it55",
    "testId": 55,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it55",
    "access": null,
    "description": "get(name) - should get properties on object",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#get}"
      }
    ],
    "testTargets": [
      "Model#get"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it56",
    "testId": 56,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it56",
    "access": null,
    "description": "set({name: value}) - should selected properties on object",
    "lineNumber": 31,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#set}"
      }
    ],
    "testTargets": [
      "Model#set"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it57",
    "testId": 57,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it57",
    "access": null,
    "description": "toJSON() - should return object properties as JSON",
    "lineNumber": 40,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#toJSON}"
      }
    ],
    "testTargets": [
      "Model#toJSON"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it58",
    "testId": 58,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it58",
    "access": null,
    "description": "has(prop) - should return true/false if property exists",
    "lineNumber": 46,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#has}"
      }
    ],
    "testTargets": [
      "Model#has"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it59",
    "testId": 59,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it59",
    "access": null,
    "description": "subscribe(event, cb) - should register callback for event",
    "lineNumber": 53,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#subscribe}"
      }
    ],
    "testTargets": [
      "Model#subscribe"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it60",
    "testId": 60,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it60",
    "access": null,
    "description": "save() - should make a http request and return response",
    "lineNumber": 70,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#set}"
      }
    ],
    "testTargets": [
      "Model#set"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it61",
    "testId": 61,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it61",
    "access": null,
    "description": "fetch() - should make a http request and return response",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#fetch}"
      }
    ],
    "testTargets": [
      "Model#fetch"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it62",
    "testId": 62,
    "memberof": "specs/model-spec.js~describe53",
    "testDepth": 1,
    "longname": "specs/model-spec.js~describe53.it62",
    "access": null,
    "description": "destroy() - should make a DELETE request and return response",
    "lineNumber": 86,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Model#destroy}"
      }
    ],
    "testTargets": [
      "Model#destroy"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/page-spec.js",
    "memberof": null,
    "longname": "specs/page-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Page} */\ndescribe('px.mobile.Page', function() {\n  var app = new px.mobile.Interface('app', ['method1']);\n\n  /** @test {Page#constructor} */\n  it('constructor()', function() {\n    assert.ok(true, 'Should ..');\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe63",
    "testId": 63,
    "memberof": "specs/page-spec.js",
    "testDepth": 0,
    "longname": "specs/page-spec.js~describe63",
    "access": null,
    "description": "px.mobile.Page",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Page}"
      }
    ],
    "testTargets": [
      "Page"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it64",
    "testId": 64,
    "memberof": "specs/page-spec.js~describe63",
    "testDepth": 1,
    "longname": "specs/page-spec.js~describe63.it64",
    "access": null,
    "description": "constructor()",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Page#constructor}"
      }
    ],
    "testTargets": [
      "Page#constructor"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/pages-spec.js",
    "memberof": null,
    "longname": "specs/pages-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Pages} */\ndescribe('px.mobile.Pagess', function() {\n  var app = new px.mobile.Interface('app', ['method1']);\n\n  /** @test {Pages#constructor} */\n  it('constructor()', function() {\n    assert.ok(true, 'Should ..');\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe65",
    "testId": 65,
    "memberof": "specs/pages-spec.js",
    "testDepth": 0,
    "longname": "specs/pages-spec.js~describe65",
    "access": null,
    "description": "px.mobile.Pagess",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Pages}"
      }
    ],
    "testTargets": [
      "Pages"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it66",
    "testId": 66,
    "memberof": "specs/pages-spec.js~describe65",
    "testDepth": 1,
    "longname": "specs/pages-spec.js~describe65.it66",
    "access": null,
    "description": "constructor()",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Pages#constructor}"
      }
    ],
    "testTargets": [
      "Pages#constructor"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/plugin-spec.js",
    "memberof": null,
    "longname": "specs/plugin-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 0,
    "content": ""
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/pubsub-spec.js",
    "memberof": null,
    "longname": "specs/pubsub-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {PubSub} */\ndescribe('px.mobile.PubSub', function() {\n  let app = new Interface('app', ['method1']);\n\n  /** @test {PubSub#constructor} */\n  it('constructor()', function() {\n    assert.equal(true, 'Should ..');\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe67",
    "testId": 67,
    "memberof": "specs/pubsub-spec.js",
    "testDepth": 0,
    "longname": "specs/pubsub-spec.js~describe67",
    "access": null,
    "description": "px.mobile.PubSub",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PubSub}"
      }
    ],
    "testTargets": [
      "PubSub"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it68",
    "testId": 68,
    "memberof": "specs/pubsub-spec.js~describe67",
    "testDepth": 1,
    "longname": "specs/pubsub-spec.js~describe67.it68",
    "access": null,
    "description": "constructor()",
    "lineNumber": 6,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{PubSub#constructor}"
      }
    ],
    "testTargets": [
      "PubSub#constructor"
    ]
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/router-spec.js",
    "memberof": null,
    "longname": "specs/router-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Router} */\nxdescribe('px.mobile.Router', function() {\n  var app = new px.mobile.App();\n  var db = null,\n    successCallback, errorCallback,\n    testObj = {\n      _id: 'test-' + Date.now(),\n      title: 'Test Doc'\n    };\n  var myRouter = null,\n    routeCallback,\n    routeHandlers = {};\n  routeCallback = function() {};\n  routeHandlers.homeRoute = function() {};\n  routeHandlers.aboutRoute = function() {};\n  routeHandlers.listRoute = function() {};\n  routeHandlers.detailRoute = function() {};\n\n  window.myRouter = myRouter = new px.mobile.Router('app', {\n    routes: {\n      '/': routeHandlers.homeRoute\n    }\n  });\n  myRouter.start();\n\n  beforeEach(function() {\n\n  });\n\n  it('should be defined', function(done) {\n    assert.ok(px.mobile.Router);\n    done();\n  });\n\n  it('should have routes defined', function(done) {\n    window.myRouter = myRouter;\n    assert.ok(myRouter.routes);\n    done();\n  });\n\n  it('on(route, cb) - invokes route when matched', function(done) {\n    myRouter.on('/about', function(req, res) {\n      expect(req).toBeDefined();\n      expect(res).toBeDefined();\n      done();\n    });\n    myRouter.navigate('/about');\n  });\n\n\n  it('on(\"/users/:action/:id\", callback) - should invoke callback if route matches', function(done) {\n    myRouter.on('/users/:action/:id', function(req, res) {\n      console.warn('callback', req, res);\n      expect(req).toBeDefined();\n      expect(res).toBeDefined();\n      expect(req.url).toBe(window.location.origin + '/users/edit/99');\n      expect(req.pathname).toBe('/users/edit/99');\n      expect(req.params.action).toBe('edit');\n      expect(req.params.id).toBe('99');\n      done();\n    });\n\n    myRouter.navigate('/users/edit/99', {\n      data: testObj\n    });\n  });\n\n\n  xit('when(route) - should resolve promise when hash matches', function(done) {\n    app.services.resolve('router').when('/posts').then(function(req, res) {\n      expect(res).toBeDefined();\n      expect(req).toBeDefined();\n      done();\n    });\n    app.services.resolve('router').navigate('/posts');\n  });\n\n\n\n  xit('should resolve route once resolve property is resolved', function(done) {\n    app.services.register('router', new px.mobile.Router('default', {\n      routes: {\n        '/login': {\n          callback: function(req, res) {\n            expect(req.users).toBeDefined();\n            console.warn('route callback', req, res);\n            done();\n          },\n          resolve: {\n            users: function() {\n              return new Promise(function(resolve, reject) {\n                setTimeout(function() {\n                  resolve({});\n                }, 1000);\n              });\n            }\n          }\n        }\n      }\n    }));\n    app.services.resolve('router').navigate('/login');\n  });\n\n\n});\n"
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it69",
    "testId": 69,
    "memberof": "specs/router-spec.js",
    "testDepth": 0,
    "longname": "specs/router-spec.js~it69",
    "access": null,
    "description": "should be defined",
    "lineNumber": 30
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it70",
    "testId": 70,
    "memberof": "specs/router-spec.js",
    "testDepth": 0,
    "longname": "specs/router-spec.js~it70",
    "access": null,
    "description": "should have routes defined",
    "lineNumber": 35
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it71",
    "testId": 71,
    "memberof": "specs/router-spec.js",
    "testDepth": 0,
    "longname": "specs/router-spec.js~it71",
    "access": null,
    "description": "on(route, cb) - invokes route when matched",
    "lineNumber": 41
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it72",
    "testId": 72,
    "memberof": "specs/router-spec.js",
    "testDepth": 0,
    "longname": "specs/router-spec.js~it72",
    "access": null,
    "description": "on(\"/users/:action/:id\", callback) - should invoke callback if route matches",
    "lineNumber": 51
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/service-locator-spec.js",
    "memberof": null,
    "longname": "specs/service-locator-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {ServiceLocator} */\ndescribe('Service Locator', function() {\n  var app = new px.mobile.App();\n  app.services.register('mySerivce', {\n    myMethod: function() {}\n  });\n\n\n  it(\"should resolve service\", function(done) {\n    assert.ok(app.services.resolve('mySerivce').myMethod);\n    done();\n  });\n\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe73",
    "testId": 73,
    "memberof": "specs/service-locator-spec.js",
    "testDepth": 0,
    "longname": "specs/service-locator-spec.js~describe73",
    "access": null,
    "description": "Service Locator",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{ServiceLocator}"
      }
    ],
    "testTargets": [
      "ServiceLocator"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it74",
    "testId": 74,
    "memberof": "specs/service-locator-spec.js~describe73",
    "testDepth": 1,
    "longname": "specs/service-locator-spec.js~describe73.it74",
    "access": null,
    "description": "should resolve service",
    "lineNumber": 9
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/simple-router-spec.js",
    "memberof": null,
    "longname": "specs/simple-router-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1,
    "content": "describe('Simple Router', function() {\n  var testRouter, routerSpies = {};\n  testRouter = window.testRouter = new px.mobile.SimpleRouter('test', {\n    mode: 'hash'\n  });\n  before(function(done) {\n    routerSpies.aboutRoute = sinon.spy();\n    routerSpies.productsRoute = sinon.spy();\n    routerSpies.defaultRoute = sinon.spy();\n\n    testRouter\n      .add(/about/, routerSpies.aboutRoute)\n      .add(/products\\/(.*)\\/edit\\/(.*)/, routerSpies.productsRoute)\n      .add(routerSpies.defaultRoute)\n      .listen();\n    done();\n  });\n\n  it('should invoke default route', function(done) {\n    testRouter.check('/');\n    assert.ok(routerSpies.defaultRoute.called);\n    done();\n  });\n\n  it('should invoke /about route', function(done) {\n    testRouter.check('/about');\n    assert.ok(routerSpies.aboutRoute.called);\n    done();\n  });\n\n\n\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe75",
    "testId": 75,
    "memberof": "specs/simple-router-spec.js",
    "testDepth": 0,
    "longname": "specs/simple-router-spec.js~describe75",
    "access": null,
    "description": "Simple Router",
    "lineNumber": 1
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it76",
    "testId": 76,
    "memberof": "specs/simple-router-spec.js~describe75",
    "testDepth": 1,
    "longname": "specs/simple-router-spec.js~describe75.it76",
    "access": null,
    "description": "should invoke default route",
    "lineNumber": 19
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it77",
    "testId": 77,
    "memberof": "specs/simple-router-spec.js~describe75",
    "testDepth": 1,
    "longname": "specs/simple-router-spec.js~describe75.it77",
    "access": null,
    "description": "should invoke /about route",
    "lineNumber": 25
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/utils-spec.js",
    "memberof": null,
    "longname": "specs/utils-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {utils} */\ndescribe('px.mobile.utils', function() {\n  it('should be defined', function() {\n    assert.ok(px.mobile.utils);\n  });\n  it('extend(o1, o2) - should copy all properties from right to left.', function(done) {\n    var obj1 = {\n      name: 'jonnie'\n    };\n    var obj2 = {\n      age: 28\n    };\n    var result = px.mobile.utils.extend(obj1, obj2);\n    assert.equal(result.age, 28);\n    assert.equal(result.name, 'jonnie');\n    done();\n  });\n\n  it('mix - should mix (x) objects into one', function(done) {\n    var cake = px.mobile.utils.mix({\n      eggs: 2,\n      large: true\n    }, {\n      butter: 1,\n      salted: true\n    }, {\n      flour: '3 cups'\n    }, {\n      sugar: 'sure!'\n    });\n    assert.equal(cake.eggs, 2);\n    assert.equal(cake.salted, true);\n    assert.equal(cake.flour, '3 cups');\n    done();\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe78",
    "testId": 78,
    "memberof": "specs/utils-spec.js",
    "testDepth": 0,
    "longname": "specs/utils-spec.js~describe78",
    "access": null,
    "description": "px.mobile.utils",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{utils}"
      }
    ],
    "testTargets": [
      "utils"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it79",
    "testId": 79,
    "memberof": "specs/utils-spec.js~describe78",
    "testDepth": 1,
    "longname": "specs/utils-spec.js~describe78.it79",
    "access": null,
    "description": "should be defined",
    "lineNumber": 3
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it80",
    "testId": 80,
    "memberof": "specs/utils-spec.js~describe78",
    "testDepth": 1,
    "longname": "specs/utils-spec.js~describe78.it80",
    "access": null,
    "description": "extend(o1, o2) - should copy all properties from right to left.",
    "lineNumber": 6
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it81",
    "testId": 81,
    "memberof": "specs/utils-spec.js~describe78",
    "testDepth": 1,
    "longname": "specs/utils-spec.js~describe78.it81",
    "access": null,
    "description": "mix - should mix (x) objects into one",
    "lineNumber": 19
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/view-spec.js",
    "memberof": null,
    "longname": "specs/view-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {View} */\ndescribe('px.mobile.View', function() {\n  it('should be defined', function() {\n    assert.ok(px.mobile.View);\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe82",
    "testId": 82,
    "memberof": "specs/view-spec.js",
    "testDepth": 0,
    "longname": "specs/view-spec.js~describe82",
    "access": null,
    "description": "px.mobile.View",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{View}"
      }
    ],
    "testTargets": [
      "View"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it83",
    "testId": 83,
    "memberof": "specs/view-spec.js~describe82",
    "testDepth": 1,
    "longname": "specs/view-spec.js~describe82.it83",
    "access": null,
    "description": "should be defined",
    "lineNumber": 3
  },
  {
    "kind": "testFile",
    "static": true,
    "variation": null,
    "name": "specs/views-spec.js",
    "memberof": null,
    "longname": "specs/views-spec.js",
    "access": null,
    "description": null,
    "lineNumber": 2,
    "content": "/** @test {Views} */\ndescribe('px.mobile.Views', function() {\n  it('should be defined', function() {\n    assert.ok(px.mobile.Views);\n  });\n  describe('Views', function() {\n    var appViews = null;\n    var exampleViews = [{\n      id: 'view0',\n      title: 'view 0'\n    }, {\n      id: 'view1',\n      title: 'view 1'\n    }, {\n      id: 'view2',\n      title: 'view 2'\n    }, {\n      id: 'view3',\n      title: 'view 3'\n    }, {\n      id: 'view4',\n      title: 'view 4'\n    }, {\n      id: 'view5',\n      title: 'view 5'\n    }];\n\n    beforeEach(function() {\n      appViews = new px.mobile.Views({\n        id: 'appjsViews',\n        selected: '0',\n        views: exampleViews\n      });\n    });\n\n    it('should select the correct view', function() {\n      assert.equal(appViews.getSelectedIndex(), 0);\n      appViews.selectView('view1');\n      assert.equal(appViews.getSelectedIndex(), 1);\n      assert.equal(appViews.selected, 1);\n    });\n\n    it('nextView() - should select next view and not loop.', function() {\n      assert.equal(appViews.getSelectedIndex(), 0);\n      assert.equal(appViews.nextView(), 1);\n      assert.equal(appViews.nextView(), 2);\n      assert.equal(appViews.nextView(), 3);\n      assert.equal(appViews.nextView(), 4);\n      assert.equal(appViews.nextView(), 5);\n      assert.equal(appViews.nextView(), 0);\n      assert.equal(appViews.nextView(), 1);\n    });\n\n    it('prevView() - should select the prev view.', function() {\n      assert.equal(appViews.nextView(), 1);\n      assert.equal(appViews.nextView(), 2);\n      assert.equal(appViews.nextView(), 3);\n      assert.equal(appViews.nextView(), 4);\n      assert.equal(appViews.nextView(), 5);\n      assert.equal(appViews.prevView(), 4);\n      assert.equal(appViews.prevView(), 3);\n      assert.equal(appViews.prevView(), 2);\n      assert.equal(appViews.prevView(), 1);\n      assert.equal(appViews.prevView(), 0);\n      assert.equal(appViews.prevView(), 0);\n\n\n    });\n\n  });\n});\n"
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe84",
    "testId": 84,
    "memberof": "specs/views-spec.js",
    "testDepth": 0,
    "longname": "specs/views-spec.js~describe84",
    "access": null,
    "description": "px.mobile.Views",
    "lineNumber": 2,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{Views}"
      }
    ],
    "testTargets": [
      "Views"
    ]
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it85",
    "testId": 85,
    "memberof": "specs/views-spec.js~describe84",
    "testDepth": 1,
    "longname": "specs/views-spec.js~describe84.it85",
    "access": null,
    "description": "should be defined",
    "lineNumber": 3
  },
  {
    "kind": "testDescribe",
    "static": true,
    "variation": null,
    "name": "describe86",
    "testId": 86,
    "memberof": "specs/views-spec.js~describe84",
    "testDepth": 1,
    "longname": "specs/views-spec.js~describe84.describe86",
    "access": null,
    "description": "Views",
    "lineNumber": 6
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it87",
    "testId": 87,
    "memberof": "specs/views-spec.js~describe84.describe86",
    "testDepth": 2,
    "longname": "specs/views-spec.js~describe84.describe86.it87",
    "access": null,
    "description": "should select the correct view",
    "lineNumber": 36
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it88",
    "testId": 88,
    "memberof": "specs/views-spec.js~describe84.describe86",
    "testDepth": 2,
    "longname": "specs/views-spec.js~describe84.describe86.it88",
    "access": null,
    "description": "nextView() - should select next view and not loop.",
    "lineNumber": 43
  },
  {
    "kind": "testIt",
    "static": true,
    "variation": null,
    "name": "it89",
    "testId": 89,
    "memberof": "specs/views-spec.js~describe84.describe86",
    "testDepth": 2,
    "longname": "specs/views-spec.js~describe84.describe86.it89",
    "access": null,
    "description": "prevView() - should select the prev view.",
    "lineNumber": 54
  }
]